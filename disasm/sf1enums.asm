

; ---------------------------------------------------------------------------

; enum AiCommands
AICOMMAND_MOVE_TO: equ 0
AICOMMAND_CHARGE: equ 1
AICOMMAND_FOLLOW_PATH: equ 2

; ---------------------------------------------------------------------------

; enum BattleactionOffsets
BATTLEACTION_OFFSET_CASTER_INDEX: equ 0
BATTLEACTION_OFFSET_TYPE: equ 1
BATTLEACTION_OFFSET_SPELL_INDEX: equ 2
BATTLEACTION_OFFSET_TARGET_INDEX: equ 3
BATTLEACTION_OFFSET_TARGET_X: equ 4
BATTLEACTION_OFFSET_TARGET_Y: equ 5

; ---------------------------------------------------------------------------

; enum BattleactionTypes
BATTLEACTION_TYPE_ATTACK: equ 0
BATTLEACTION_TYPE_CAST_SPELL: equ 1
BATTLEACTION_TYPE_USE_ITEM: equ 2
BATTLEACTION_TYPE_3: equ 3

; ---------------------------------------------------------------------------

; enum BattleDataOffsets
BATTLEDATA_ALLY_X: equ 0
BATTLEDATA_ENEMY_X: equ 0
BATTLEDATA_ENEMY_INDEX: equ 0
BATTLEDATA_AI_REGIONS: equ 0
BATTLEDATA_ALLY_Y: equ 1
BATTLEDATA_ENEMY_Y: equ 1
BATTLEDATA_ENEMY_ITEM_0: equ 1
BATTLEDATA_AI_COMMAND: equ 1
BATTLEDATA_ENEMY_SPAWN_REGION: equ 2
BATTLEDATA_ENEMY_ITEM_1: equ 2
BATTLEDATA_AI_PARAMETER_0: equ 2
BATTLEDATA_ENEMY_SPAWN_COUNTER: equ 3
BATTLEDATA_ENEMY_SPELL: equ 3
BATTLEDATA_AI_PARAMETER_1: equ 3

; ---------------------------------------------------------------------------

; enum BattlefieldEngineOffsets
OFFSET_PASSABILITY_FLAGS_TO_TABLE_AT_FFA8C0: equ $400
OFFSET_PASSABILITY_FLAGS_TO_CURRENT_TERRAIN_DATA: equ $800
OFFSET_CURRENT_TERRAIN_DATA_TO_MOVE_COSTS: equ $1540
OFFSET_PASSABILITY_FLAGS_TO_MOVE_COSTS: equ $1D40

; ---------------------------------------------------------------------------

; enum BattlefieldSpawnRegions
SPAWN_REGION_0: equ 0
SPAWN_REGION_1: equ 1
SPAWN_REGION_2: equ 2
SPAWN_REGION_3: equ 3
SPAWN_REGION_4: equ 4
SPAWN_REGION_5: equ 5
SPAWN_REGION_6: equ 6
SPAWN_REGION_7: equ 7
SPAWN_REGION_8: equ 8
SPAWN_REGION_9: equ 9
SPAWN_REGION_10: equ 10
SPAWN_REGION_14: equ 14
SPAWN_REGION_15: equ 15

; ---------------------------------------------------------------------------

; enum BattleHeaderOffsets
BATTLEHEADER_OFFSET_MAP_WIDTH: equ $10

; ---------------------------------------------------------------------------

; enum BattlePartySlots
BATTLE_PARTY_SLOTS_COUNTER: equ 11
BATTLE_PARTY_SLOTS_NUMBER: equ 12
EMPTY_BATTLE_PARTY_SLOT: equ 255

; ---------------------------------------------------------------------------

; enum BattlespriteProperties
PROMOTED_BATTLESPRITES_START: equ 19

; ---------------------------------------------------------------------------

; enum Battlesprites_Ally
ALLYBATTLESPRITE_MAX_SDMN: equ 0
ALLYBATTLESPRITE_KNT: equ 1
ALLYBATTLESPRITE_WARR: equ 2
ALLYBATTLESPRITE_GUNTZ_SKNT: equ 3
ALLYBATTLESPRITE_MAGE: equ 4
ALLYBATTLESPRITE_DOMINGO_1: equ 5
ALLYBATTLESPRITE_HEAL: equ 6
ALLYBATTLESPRITE_KHRIS_HEAL: equ 7
ALLYBATTLESPRITE_GONG_MONK: equ 8
ALLYBATTLESPRITE_ACHR: equ 9
ALLYBATTLESPRITE_LYLE_ASKT: equ 10
ALLYBATTLESPRITE_BDMN: equ 11
ALLYBATTLESPRITE_KOKICHI_WKNT: equ 12
ALLYBATTLESPRITE_BLEU_DRGN: equ 13
ALLYBATTLESPRITE_ADAM_RBT: equ 14
ALLYBATTLESPRITE_ZYLO_WRWF: equ 15
ALLYBATTLESPRITE_MUSASHI: equ 16
ALLYBATTLESPRITE_HANZOU: equ 17
ALLYBATTLESPRITE_JOGURT: equ 18
ALLYBATTLESPRITE_MAX_HERO: equ 19
ALLYBATTLESPRITE_PLDN: equ 20
ALLYBATTLESPRITE_GLDR: equ 21
ALLYBATTLESPRITE_GUNTZ_SBRN: equ 22
ALLYBATTLESPRITE_WIZD: equ 23
ALLYBATTLESPRITE_DOMINGO_2: equ 24
ALLYBATTLESPRITE_VICR: equ 25
ALLYBATTLESPRITE_KHRIS_VICR: equ 26
ALLYBATTLESPRITE_GONG_MSMK: equ 27
ALLYBATTLESPRITE_BWMS: equ 28
ALLYBATTLESPRITE_LYLE_SKNT: equ 29
ALLYBATTLESPRITE_SKYW: equ 30
ALLYBATTLESPRITE_KOKICHI_SKYL: equ 31
ALLYBATTLESPRITE_BLEU_GRDR: equ 32
ALLYBATTLESPRITE_ADAM_CYBG: equ 33
ALLYBATTLESPRITE_ZYLO_WFBN: equ 34

; ---------------------------------------------------------------------------

; enum Battlesprites_Enemy
ENEMYBATTLESPRITE_GOBLIN: equ 0
ENEMYBATTLESPRITE_KNIGHT: equ 1
ENEMYBATTLESPRITE_DURAHAN: equ 2
ENEMYBATTLESPRITE_DWARF: equ 3
ENEMYBATTLESPRITE_ELF: equ 4
ENEMYBATTLESPRITE_LIZARDMAN: equ 5
ENEMYBATTLESPRITE_PRIEST: equ 6
ENEMYBATTLESPRITE_HOUND: equ 7
ENEMYBATTLESPRITE_GARGOYLE: equ 8
ENEMYBATTLESPRITE_GOLEM: equ 9
ENEMYBATTLESPRITE_ZOMBIE: equ 10
ENEMYBATTLESPRITE_MAGE: equ 11
ENEMYBATTLESPRITE_BAT: equ 12
ENEMYBATTLESPRITE_WORM: equ 13
ENEMYBATTLESPRITE_MINOTAUR: equ 14
ENEMYBATTLESPRITE_PUPPET: equ 15
ENEMYBATTLESPRITE_CLOWN: equ 16
ENEMYBATTLESPRITE_SKELETON: equ 17
ENEMYBATTLESPRITE_MARIONETTE: equ 18
ENEMYBATTLESPRITE_ARMED_SKELETON: equ 20
ENEMYBATTLESPRITE_PEGASUS_KNIGHT: equ 21
ENEMYBATTLESPRITE_CHIMAERA: equ 22
ENEMYBATTLESPRITE_WYVERN: equ 23
ENEMYBATTLESPRITE_DRAGON: equ 24
ENEMYBATTLESPRITE_SHELLFISH: equ 25
ENEMYBATTLESPRITE_ARTILLERY: equ 27
ENEMYBATTLESPRITE_STEEL_CLAW: equ 28
ENEMYBATTLESPRITE_TORCH_EYE: equ 29
ENEMYBATTLESPRITE_JET: equ 30
ENEMYBATTLESPRITE_DARKSOL: equ 31
ENEMYBATTLESPRITE_LASER_EYE: equ 32
ENEMYBATTLESPRITE_ELLIOTT: equ 33
ENEMYBATTLESPRITE_BALBAZAK: equ 34
ENEMYBATTLESPRITE_MISHAELA: equ 35
ENEMYBATTLESPRITE_CHAOS: equ 36
ENEMYBATTLESPRITE_RAMLADU: equ 37
ENEMYBATTLESPRITE_CAIN: equ 38
ENEMYBATTLESPRITE_COLOSSUS: equ 39
ENEMYBATTLESPRITE_DARK_DRAGON: equ 40
ENEMYBATTLESPRITE_BOWRIDER: equ 41

; ---------------------------------------------------------------------------

; enum ClassDefinitionOffsets
CLASSDEF_OFFSET_MOVE_TYPE: equ 0
CLASSDEF_OFFSET_AI_ACTION: equ 1
CLASSDEF_OFFSET_RESISTANCES: equ 2
CLASSDEF_OFFSET_PROPERTIES: equ 4 ; upper nibble holds AI action chance
CLASSDEF_OFFSET_UNARMED_RANGE: equ 5
CLASSDEF_OFFSET_UNARMED_EFFECT: equ 6
CLASSDEF_OFFSET_SPECIAL_ATTACK_INDEX: equ 7

; ---------------------------------------------------------------------------

; enum ClassDefinitionMoveTypes
MOVE_TYPE_NULL: equ 0
MOVE_TYPE_STANDARD: equ 1
MOVE_TYPE_MOUNTED: equ 2
MOVE_TYPE_AQUATIC: equ 3
MOVE_TYPE_FOREST: equ 4
MOVE_TYPE_MECHANICAL: equ 5
MOVE_TYPE_FLYING: equ 6
MOVE_TYPE_HOVERING: equ 7

; ---------------------------------------------------------------------------

; enum ClassDefinitionAiActions
AI_ACTION_FIRE_BREATH_1: equ 0
AI_ACTION_FIRE_BREATH_2: equ 1
AI_ACTION_FIRE_BREATH_3: equ 2
AI_ACTION_ICE_BREATH_1: equ 3
AI_ACTION_ICE_BREATH_2: equ 4
AI_ACTION_ICE_BREATH_3: equ 5
AI_ACTION_ELECTRIC_BREATH: equ 6
AI_ACTION_MACHINE_GUN: equ 7
AI_ACTION_LASER: equ 8
AI_ACTION_DEMON_BLAZE_1: equ 9
AI_ACTION_DEMON_BLAZE_2: equ 10
AI_ACTION_CAST_SPELL: equ 128
AI_ACTION_USE_ITEM_SLOT_0: equ 129
AI_ACTION_USE_ITEM_SLOT_1: equ 130
AI_ACTION_DARK_DRAGON: equ 131
AI_ACTION_REGULAR_ATTACK: equ 255

; ---------------------------------------------------------------------------

; enum ClassDefinitionResistances (bitfield)
RESISTANCE_NONE: equ 0
RESISTANCE_FIRE_MINOR: equ 1
RESISTANCE_FIRE_MAJOR: equ 2
RESISTANCE_FIRE_WEAKNESS: equ 3
RESISTANCE_ICE_MINOR: equ 4
RESISTANCE_ICE_MAJOR: equ 8
RESISTANCE_ICE_WEAKNESS: equ $C
RESISTANCE_LIGHTNING_MINOR: equ $10
RESISTANCE_LIGHTNING_MAJOR: equ $20
RESISTANCE_LIGHTNING_WEAKNESS: equ $30
RESISTANCE_SLEEP_AND_DESOUL_MINOR: equ $40
RESISTANCE_SLEEP_AND_DESOUL_MAJOR: equ $80
RESISTANCE_SLEEP_AND_DESOUL_WEAKNESS: equ $C0
RESISTANCE_ANTI_AIR_MINOR: equ $100
RESISTANCE_ANTI_AIR_MAJOR: equ $200
RESISTANCE_ANTI_AIR_WEAKNESS: equ $300
RESISTANCE_CHAOS_BREAKER_MINOR: equ $400
RESISTANCE_CHAOS_BREAKER_MAJOR: equ $800
RESISTANCE_CHAOS_BREAKER_WEAKNESS: equ $C00
RESISTANCE_UNUSED_MINOR: equ $1000
RESISTANCE_UNUSED_MAJOR: equ $2000
RESISTANCE_UNUSED_WEAKNESS: equ $3000
RESISTANCE_EVASION_25: equ $4000
RESISTANCE_EVASION_50: equ $8000
RESISTANCE_EVASION_0: equ $C000

; ---------------------------------------------------------------------------

; enum ClassDefinitionProperties (bitfield)
CLASS_PROPERTY_SPECIAL_0: equ 0
CLASS_PROPERTY_SPECIAL_25: equ 1
CLASS_PROPERTY_SPECIAL_50: equ 2
CLASS_PROPERTY_SPECIAL_75: equ 3
CLASS_PROPERTY_DOUBLE_DEFAULT: equ 0
CLASS_PROPERTY_DOUBLE_NEVER: equ 4
CLASS_PROPERTY_DOUBLE_HIGH: equ 8
CLASS_PROPERTY_DOUBLE_LEVEL: equ $C
CLASS_PROPERTY_ACTION_100: equ 0
CLASS_PROPERTY_ACTION_25: equ $10
CLASS_PROPERTY_ACTION_50: equ $20
CLASS_PROPERTY_ACTION_75: equ $30
CLASS_PROPERTY_UNUSED: equ $40
CLASS_PROPERTY_HP_REGEN: equ $80

; ---------------------------------------------------------------------------

; enum ClassDefinitionPropertiesBitmap
CLASS_PROPERTY_BIT_UNUSED: equ 6
CLASS_PROPERTY_BIT_HP_REGEN: equ 7

; ---------------------------------------------------------------------------

; enum ClassDefinitionPropertiesMasks
CLASS_PROPERTY_MASK_SPECIAL_ATTACK_CHANCE: equ 3
CLASS_PROPERTY_MASK_DOUBLE_ATTACK_MODE: equ $C
CLASS_PROPERTY_MASK_AI_ACTION_CHANCE: equ $30

; ---------------------------------------------------------------------------

; enum ClassDefinitionDoubleAttackModes
DOUBLE_ATTACK_MODE_DEFAULT: equ 0
DOUBLE_ATTACK_MODE_NEVER: equ 1
DOUBLE_ATTACK_MODE_HIGH: equ 2
DOUBLE_ATTACK_MODE_LEVEL_BONUS: equ 3

; ---------------------------------------------------------------------------

; enum ClassEntryProperties
BASE_CLASSES_END: equ 13
PROMOTED_CLASSES_START: equ 14
ENEMY_CLASSES_START: equ 32

; ---------------------------------------------------------------------------

; enum Classes
CLASS_SDMN: equ 0
CLASS_KNT: equ 1
CLASS_WARR: equ 2
CLASS_SKNT_1: equ 3 ; Guntz's base class
CLASS_MAGE: equ 4
CLASS_MONK: equ 5
CLASS_HEAL: equ 6
CLASS_ACHR: equ 7
CLASS_ASKT: equ 8
CLASS_BDMN: equ 9
CLASS_WKNT: equ 10
CLASS_DRGN: equ 11
CLASS_RBT: equ 12
CLASS_WRWF: equ 13
CLASS_SMR: equ 14
CLASS_NINJ: equ 15
CLASS_HERO: equ 16
CLASS_PLDN: equ 17
CLASS_GLDR: equ 18
CLASS_SBRN: equ 19
CLASS_WIZD: equ 20
CLASS_MSMK: equ 21
CLASS_VICR: equ 22
CLASS_BWMS: equ 23
CLASS_SKNT_2: equ 24 ; Lyle's promoted class
CLASS_SKYW: equ 25
CLASS_SKYL: equ 26
CLASS_GRDR: equ 27
CLASS_CYBG: equ 28
CLASS_WFBN: equ 29
CLASS_YGRT: equ 30
CLASS_MGCR: equ 31
CLASS_GOBLIN: equ 32
CLASS_BOWRIDER: equ 33
CLASS_RUNE_KNIGHT: equ 34
CLASS_SILVER_KNIGHT: equ 35
CLASS_DURAHAN_1: equ 36
CLASS_DARK_DWARF: equ 37
CLASS_HORSEMAN: equ 38
CLASS_SNIPER: equ 39
CLASS_DARK_ELF: equ 40
CLASS_LIZARDMAN: equ 41
CLASS_DARK_MAGE_1: equ 42
CLASS_DARK_PRIEST_1: equ 43
CLASS_HIGH_PRIEST_1: equ 44
CLASS_CERBERUS: equ 45
CLASS_HELLHOUND: equ 46
CLASS_GARGOYLE: equ 47
CLASS_BELIAL: equ 48
CLASS_GOLEM: equ 49
CLASS_WEED: equ 50
CLASS_DARK_PRIEST_2: equ 51
CLASS_ZOMBIE_1: equ 52
CLASS_DARK_MAGE_2: equ 53
CLASS_MASTER_MAGE: equ 54
CLASS_DEMON_MASTER_1: equ 55
CLASS_GIANT_BAT: equ 56
CLASS_SEABAT: equ 57
CLASS_WORM: equ 58
CLASS_ICE_WORM: equ 59
CLASS_MINOTAUR_1: equ 60
CLASS_ARTILLERY_1: equ 61
CLASS_MANNEQUIN: equ 62
CLASS_EVIL_PUPPET: equ 63
CLASS_DIRE_CLOWN: equ 64
CLASS_DURAHAN_2: equ 65
CLASS_SKELETON_1: equ 66
CLASS_HIGH_PRIEST_2: equ 67
CLASS_MARIONETTE: equ 68
CLASS_DEMON_MASTER_2: equ 69
CLASS_ARMED_SKELETON: equ 70
CLASS_PEGASUS_KNIGHT_1: equ 71
CLASS_ARTILLERY_2: equ 72
CLASS_CHIMAERA_1: equ 73
CLASS_WYVERN: equ 74
CLASS_BLUE_DRAGON: equ 75
CLASS_CONCH: equ 76
CLASS_SHELLFISH: equ 77
CLASS_ARTILLERY_3: equ 78
CLASS_STEEL_CLAW: equ 79
CLASS_TORCH_EYE: equ 80
CLASS_JET: equ 81
CLASS_DARKSOL: equ 82
CLASS_LASER_EYE: equ 83
CLASS_ELLIOTT: equ 84
CLASS_BALBAZAK: equ 85
CLASS_MISHAELA: equ 86
CLASS_CHAOS: equ 87
CLASS_RAMLADU: equ 88
CLASS_CAIN: equ 89
CLASS_COLOSSUS_1: equ 90
CLASS_DARK_DRAGON_1: equ 91
CLASS_COLOSSUS_2: equ 92
CLASS_COLOSSUS_3: equ 93
CLASS_DARK_MAGE_3: equ 94
CLASS_ZOMBIE_2: equ 95
CLASS_SKELETON_2: equ 96
CLASS_GHOUL: equ 97
CLASS_PEGASUS_KNIGHT_2: equ 98
CLASS_DARK_MAGE_4: equ 99
CLASS_DURAHAN_3: equ 100
CLASS_MINOTAUR_2: equ 101
CLASS_CHIMAERA_2: equ 102
CLASS_SKELETON_3: equ 103
CLASS_DARK_DRAGON_2: equ 104

; ---------------------------------------------------------------------------

; enum Combatants
ALLY_LEADER: equ 0
ENEMY_LEADER: equ 128

; ---------------------------------------------------------------------------

; enum CombatantData
COMBATANT_ENTRY_SIZE: equ 16
COMBATANT_ENTRIES_COUNTER: equ 31
COMBATANT_ENTRIES_NUMBER: equ 32
EMPTY_COMBATANT_SLOT: equ 255

; ---------------------------------------------------------------------------

; enum CombatantDataOffsets
COMBATANT_OFFSET_ENTITY_INDEX: equ 0
COMBATANT_OFFSET_X: equ 1
COMBATANT_OFFSET_Y: equ 2
COMBATANT_OFFSET_MODIFIED_ATTACK: equ 3
COMBATANT_OFFSET_MODIFIED_DEFENSE: equ 4
COMBATANT_OFFSET_MODIFIED_AGILITY: equ 5
COMBATANT_OFFSET_MODIFIED_MOVE: equ 6
COMBATANT_OFFSET_MODIFIED_CRITICAL: equ 7
COMBATANT_OFFSET_MODIFIED_DOUBLE_ATTACK_MODE: equ 8
COMBATANT_OFFSET_ITEMS: equ 9
COMBATANT_OFFSET_SPELLS: equ 12

; ---------------------------------------------------------------------------

; enum CombatantMasks
COMBATANT_INDEX_MASK: equ $7F

; ---------------------------------------------------------------------------

; enum ControllerInputs (bitfield)
INPUT_UP: equ 1
INPUT_DOWN: equ 2
INPUT_LEFT: equ 4
INPUT_RIGHT: equ 8
INPUT_B: equ $10
INPUT_C: equ $20
INPUT_A: equ $40
INPUT_START: equ $80

; ---------------------------------------------------------------------------

; enum ControllerInputsBitmap
INPUT_BIT_UP: equ 0
INPUT_BIT_DOWN: equ 1
INPUT_BIT_LEFT: equ 2
INPUT_BIT_RIGHT: equ 3
INPUT_BIT_B: equ 4
INPUT_BIT_C: equ 5
INPUT_BIT_A: equ 6
INPUT_BIT_START: equ 7

; ---------------------------------------------------------------------------

; enum Colors
PALETTE_COLORS_COUNTER: equ 15
CRAM_COLORS_COUNTER: equ 63

; ---------------------------------------------------------------------------

; enum DealsItems
DEALS_ITEMS_BYTES_COUNTER: equ 31

; ---------------------------------------------------------------------------

; enum EntityEntry
ENTITYENTRY_BIT_ENEMY: equ 7

; ---------------------------------------------------------------------------

; enum EffectDefinitionOffsets
EFFECTDEF_OFFSET_TYPE: equ 0
EFFECTDEF_OFFSET_ANIM: equ 1
EFFECTDEF_OFFSET_ELEMENT: equ 2
EFFECTDEF_OFFSET_STATUS: equ 2 ; inflict status effect
EFFECTDEF_OFFSET_POWER: equ 3
EFFECTDEF_OFFSET_CAN_FAIL: equ 3 ; inflict status effect
EFFECTDEF_OFFSET_MESSAGE: equ 4
EFFECTDEF_OFFSET_ROUTINE: equ 6

; ---------------------------------------------------------------------------

; enum Effects
EFFECT_ATTACK: equ 0
EFFECT_DOOM_BLADE_ATTACK: equ 1
EFFECT_CHAOS_BREAKER_ATTACK: equ 2
EFFECT_DEMON_ROD_USE: equ 3
EFFECT_FIRE_BREATH_1: equ 4
EFFECT_FIRE_BREATH_2: equ 5
EFFECT_FIRE_BREATH_3: equ 6
EFFECT_ICE_BREATH_1: equ 7
EFFECT_ICE_BREATH_2: equ 8
EFFECT_ICE_BREATH_3: equ 9
EFFECT_ELECTRIC_BREATH: equ 10 ; unused
EFFECT_MACHINE_GUN: equ 11
EFFECT_LASER: equ 12
EFFECT_DEMON_BLAZE_1: equ 13
EFFECT_LASER_EYE: equ 14
EFFECT_MEDICAL_HERB: equ 15
EFFECT_HEALING_SEED: equ 16
EFFECT_ANTIDOTE: equ 17
EFFECT_SHOWER_OF_CURE: equ 18
EFFECT_YOGURT_RING: equ 19
EFFECT_HEAL_1: equ 20
EFFECT_HEAL_2: equ 21
EFFECT_HEAL_3: equ 22
EFFECT_HEAL_4: equ 23
EFFECT_AURA_1: equ 24
EFFECT_AURA_2: equ 25
EFFECT_AURA_3: equ 26
EFFECT_AURA_4: equ 27
EFFECT_DETOX_1: equ 28
EFFECT_DETOX_2: equ 29
EFFECT_QUICK: equ 30
EFFECT_SLOW: equ 31
EFFECT_BOOST: equ 32
EFFECT_DISPEL: equ 33
EFFECT_SHIELD: equ 34
EFFECT_MUDDLE: equ 35
EFFECT_BLAZE_1: equ 36
EFFECT_BLAZE_2: equ 37
EFFECT_BLAZE_3: equ 38
EFFECT_BLAZE_4: equ 39
EFFECT_FREEZE_1: equ 40
EFFECT_FREEZE_2: equ 41
EFFECT_FREEZE_3: equ 42
EFFECT_FREEZE_4: equ 43
EFFECT_BOLT_1: equ 44
EFFECT_BOLT_2: equ 45
EFFECT_BOLT_3: equ 46
EFFECT_BOLT_4: equ 47
EFFECT_DESOUL_1: equ 48
EFFECT_DESOUL_2: equ 49
EFFECT_EGRESS: equ 50
EFFECT_UNUSED: equ 51
EFFECT_SLEEP: equ 52
EFFECT_POWER_POTION: equ 53
EFFECT_DEFENSE_POTION: equ 54
EFFECT_LEGS_OF_HASTE: equ 55
EFFECT_TURBO_PEPPER: equ 56
EFFECT_BREAD_OF_LIFE: equ 57
EFFECT_DEMON_BLAZE_2: equ 58
EFFECT_KINDAN_NO_HAKO: equ 99
EFFECT_NONE: equ 255

; ---------------------------------------------------------------------------

; enum EffectElements
EFFECT_ELEMENT_FIRE: equ 0 ; also determines resistance to SLOW, DISPEL, and MUDDLE
EFFECT_ELEMENT_ICE: equ 1
EFFECT_ELEMENT_LIGHTNING: equ 2
EFFECT_ELEMENT_SLEEP_AND_DESOUL: equ 3
EFFECT_ELEMENT_ANTI_AIR: equ 4 ; misleadingly labeled "Muddle" in SF1Edit
EFFECT_ELEMENT_CHAOS_BREAKER: equ 5 ; misleadingly labeled "Slow" in SF1Edit
EFFECT_ELEMENT_UNUSED: equ 6 ; labeled "?" in SF1Edit
EFFECT_ELEMENT_NONE: equ 7

; ---------------------------------------------------------------------------

; enum EffectStatuses
EFFECT_STATUS_QUICK: equ 0
EFFECT_STATUS_SLOW: equ 1
EFFECT_STATUS_BOOST: equ 2
EFFECT_STATUS_DISPEL: equ 3
EFFECT_STATUS_SHIELD: equ 4
EFFECT_STATUS_MUDDLE: equ 5
EFFECT_STATUS_SLEEP: equ 6
EFFECT_STATUS_POISON: equ 7
EFFECT_STATUS_CURSE: equ 8
EFFECT_STATUS_JOGURT: equ 9

; ---------------------------------------------------------------------------

; enum Enemies
ENEMY_GOBLIN: equ 0
ENEMY_BOWRIDER: equ 1
ENEMY_RUNE_KNIGHT: equ 2
ENEMY_SILVER_KNIGHT: equ 3
ENEMY_DURAHAN_1: equ 4
ENEMY_DARK_DWARF: equ 5
ENEMY_HORSEMAN: equ 6
ENEMY_SNIPER: equ 7
ENEMY_DARK_ELF: equ 8
ENEMY_LIZARDMAN: equ 9
ENEMY_DARK_MAGE_1: equ 10
ENEMY_DARK_PRIEST_1: equ 11
ENEMY_HIGH_PRIEST_1: equ 12
ENEMY_CERBERUS: equ 13
ENEMY_HELLHOUND: equ 14
ENEMY_GARGOYLE: equ 15
ENEMY_BELIAL: equ 16
ENEMY_GOLEM: equ 17
ENEMY_WEED: equ 18
ENEMY_DARK_PRIEST_2: equ 19
ENEMY_ZOMBIE_1: equ 20
ENEMY_DARK_MAGE_2: equ 21
ENEMY_MASTER_MAGE: equ 22
ENEMY_DEMON_MASTER_1: equ 23
ENEMY_GIANT_BAT: equ 24
ENEMY_SEABAT: equ 25
ENEMY_WORM: equ 26
ENEMY_ICE_WORM: equ 27
ENEMY_MINOTAUR_1: equ 28
ENEMY_ARTILLERY_1: equ 29
ENEMY_MANNEQUIN: equ 30
ENEMY_EVIL_PUPPET: equ 31
ENEMY_DIRE_CLOWN: equ 32
ENEMY_DURAHAN_2: equ 33
ENEMY_SKELETON_1: equ 34
ENEMY_HIGH_PRIEST_2: equ 35
ENEMY_MARIONETTE: equ 36
ENEMY_DEMON_MASTER_2: equ 37
ENEMY_ARMED_SKELETON: equ 38
ENEMY_PEGASUS_KNIGHT_1: equ 39
ENEMY_ARTILLERY_2: equ 40
ENEMY_CHIMAERA_1: equ 41
ENEMY_WYVERN: equ 42
ENEMY_BLUE_DRAGON: equ 43
ENEMY_CONCH: equ 44
ENEMY_SHELLFISH: equ 45
ENEMY_ARTILLERY_3: equ 46
ENEMY_STEEL_CLAW: equ 47
ENEMY_TORCH_EYE: equ 48
ENEMY_JET: equ 49
ENEMY_DARKSOL: equ 50
ENEMY_LASER_EYE: equ 51
ENEMY_ELLIOTT: equ 52
ENEMY_BALBAZAK: equ 53
ENEMY_MISHAELA: equ 54
ENEMY_CHAOS: equ 55
ENEMY_RAMLADU: equ 56
ENEMY_CAIN: equ 57
ENEMY_COLOSSUS_1: equ 58
ENEMY_DARK_DRAGON_1: equ 59
ENEMY_COLOSSUS_2: equ 60
ENEMY_COLOSSUS_3: equ 61
ENEMY_DARK_MAGE_3: equ 62
ENEMY_ZOMBIE_2: equ 63
ENEMY_SKELETON_2: equ 64
ENEMY_GHOUL: equ 65
ENEMY_PEGASUS_KNIGHT_2: equ 66
ENEMY_DARK_MAGE_4: equ 67
ENEMY_DURAHAN_3: equ 68
ENEMY_MINOTAUR_2: equ 69
ENEMY_CHIMAERA_2: equ 70
ENEMY_SKELETON_3: equ 71
ENEMY_DARK_DRAGON_2: equ 72

; ---------------------------------------------------------------------------

; enum EnemyDefinitionOffsets
ENEMY_OFFSET_COINS: equ 0
ENEMY_OFFSET_CLASS: equ 2
ENEMY_OFFSET_LEVEL: equ 3
ENEMY_OFFSET_ATTACK: equ 4
ENEMY_OFFSET_DEFENSE: equ 5
ENEMY_OFFSET_AGILITY: equ 6
ENEMY_OFFSET_MOVE: equ 7
ENEMY_OFFSET_HP: equ 8
ENEMY_OFFSET_MP: equ 10
ENEMY_OFFSET_11: equ 11
ENEMY_OFFSET_MAPSPRITE: equ 12
ENEMY_OFFSET_BATTLESPRITE: equ 13
ENEMY_OFFSET_PALETTE: equ 14
ENEMY_OFFSET_PORTRAIT: equ 15

; ---------------------------------------------------------------------------

; enum EquipFlags (bitfield)
EQUIPFLAG_SDMN: equ 1
EQUIPFLAG_KNT: equ 2
EQUIPFLAG_WARR: equ 4
EQUIPFLAG_SKNT_1: equ 8
EQUIPFLAG_MAGE: equ $10
EQUIPFLAG_MONK: equ $20
EQUIPFLAG_HEAL: equ $40
EQUIPFLAG_ACHR: equ $80
EQUIPFLAG_ASKT: equ $100
EQUIPFLAG_BDMN: equ $200
EQUIPFLAG_WKNT: equ $400
EQUIPFLAG_DRGN: equ $800
EQUIPFLAG_RBT: equ $1000
EQUIPFLAG_WRWF: equ $2000
EQUIPFLAG_SMR: equ $4000
EQUIPFLAG_NINJ: equ $8000
EQUIPFLAG_HERO: equ $10000
EQUIPFLAG_PLDN: equ $20000
EQUIPFLAG_GLDR: equ $40000
EQUIPFLAG_SBRN: equ $80000
EQUIPFLAG_WIZD: equ $100000
EQUIPFLAG_MSMK: equ $200000
EQUIPFLAG_VICR: equ $400000
EQUIPFLAG_BWMS: equ $800000
EQUIPFLAG_SKNT_2: equ $1000000
EQUIPFLAG_SKYW: equ $2000000
EQUIPFLAG_SKYL: equ $4000000
EQUIPFLAG_GRDR: equ $8000000
EQUIPFLAG_CYBG: equ $10000000
EQUIPFLAG_WFBN: equ $20000000
EQUIPFLAG_YGRT: equ $40000000
EQUIPFLAG_MGCR: equ $80000000

; ---------------------------------------------------------------------------

; enum EquipFlags_All
EQUIPFLAG_ALL: equ $FFFFFFFF

; ---------------------------------------------------------------------------

; enum EventFlags
EVENT_FLAGS_COUNTER: equ 63

; ---------------------------------------------------------------------------

; enum ExperienceValues
EXPERIENCE_PER_HEAL: equ 10
EXPERIENCE_HEAL_CAP: equ 20
EXPERIENCE_ACTION_CAP: equ 48

; ---------------------------------------------------------------------------

; enum FacingDirections
FACING_UP: equ 0
FACING_RIGHT: equ 1
FACING_DOWN: equ 2
FACING_LEFT: equ 3

; ---------------------------------------------------------------------------

; enum Fading
IN_FROM_BLACK: equ 1
OUT_TO_BLACK: equ 2
IN_FROM_WHITE: equ 3
OUT_TO_WHITE: equ 4

; ---------------------------------------------------------------------------

; enum ForceDefinition
FORCE_MEMBER_NAME_COUNTER: equ 9
FORCE_NAME_LENGTH: equ 10
FORCE_LEVEL_CAP_UNPROMOTED: equ 20
FORCE_ENTRY_SIZE: equ 40
FORCE_STAT_CAP: equ 99
FORCE_LEVEL_CAP_PROMOTED: equ 99
FORCE_GOLD_CAP: equ 999999

; ---------------------------------------------------------------------------

; enum ForceMemberEntry
FORCEMEMBERENTRY_MASK_INDEX: equ $3F
FORCEMEMBERENTRY_MASK_INDEX_0: equ $7F

; ---------------------------------------------------------------------------

; enum ForceDataOffsets
FORCE_OFFSET_NAME: equ 0
FORCE_OFFSET_CLASS: equ 10
FORCE_OFFSET_LEVEL: equ 11
FORCE_OFFSET_BASE_ATTACK: equ 12
FORCE_OFFSET_BASE_DEFENSE: equ 13
FORCE_OFFSET_BASE_AGILITY: equ 14
FORCE_OFFSET_BASE_MOVE: equ 15
FORCE_OFFSET_BASE_CRITICAL: equ 16
FORCE_OFFSET_EXPERIENCE: equ 17
FORCE_OFFSET_MAXIMUM_HP: equ 18
FORCE_OFFSET_MAXIMUM_HP_LOW_BYTE: equ 19
FORCE_OFFSET_CURRENT_HP: equ 20
FORCE_OFFSET_MAXIMUM_MP: equ 22
FORCE_OFFSET_CURRENT_MP: equ 23
FORCE_OFFSET_STATUS_EFFECTS: equ 24
FORCE_OFFSET_ITEMS: equ 26
FORCE_OFFSET_SPELLS: equ 30

; ---------------------------------------------------------------------------

; enum ForceMembers
ALLY_MAX: equ 0
ALLY_MAE: equ 1
ALLY_PELLE: equ 2
ALLY_KEN: equ 3
ALLY_VANKAR: equ 4
ALLY_EARNEST: equ 5
ALLY_ARTHUR: equ 6
ALLY_GORT: equ 7
ALLY_LUKE: equ 8
ALLY_GUNTZ: equ 9
ALLY_ANRI: equ 10
ALLY_ALEF: equ 11
ALLY_TAO: equ 12
ALLY_DOMINGO: equ 13
ALLY_LOWE: equ 14
ALLY_KHRIS: equ 15
ALLY_TORASU: equ 16
ALLY_GONG: equ 17
ALLY_DIANE: equ 18
ALLY_HANS: equ 19
ALLY_LYLE: equ 20
ALLY_AMON: equ 21
ALLY_BALBAROY: equ 22
ALLY_KOKICHI: equ 23
ALLY_BLEU: equ 24
ALLY_ADAM: equ 25
ALLY_ZYLO: equ 26
ALLY_MUSASHI: equ 27
ALLY_HANZOU: equ 28
ALLY_JOGURT: equ 29
ALLY_NOVA: equ 30

; ---------------------------------------------------------------------------

; enum ForceMembersData
REGULAR_NON_LEADER_FORCE_MEMBERS_COUNTER: equ 27
REGULAR_FORCE_MEMBERS_COUNTER: equ 28 ; exclude Jogurt and Nova from regular Force
NON_LEADER_FORCE_MEMBERS_COUNTER: equ 28 ; exclude Max
FORCE_MEMBERS_COUNTER: equ 30
FORCE_MEMBERS_NUMBER: equ 31
FORCE_MEMBERS_DATA_BYTES_COUNTER: equ 1239

; ---------------------------------------------------------------------------

; enum GeneralEntities
NPC00: equ 128
NPC01: equ 129
NPC02: equ 130
NPC03: equ 131
NPC04: equ 132
NPC05: equ 133

; ---------------------------------------------------------------------------

; enum GrowthCurves
GROWTHCURVE_LINEAR: equ 0
GROWTHCURVE_LATE: equ $40
GROWTHCURVE_EARLYLATE: equ $80
GROWTHCURVE_EARLY: equ $C0

; ---------------------------------------------------------------------------

; enum GrowthDefinition
GROWTH_PROJECTION_LEVEL: equ $14
GROWTH_MASK_VALUE: equ $3F
GROWTH_MASK_CURVE_INDEX: equ $C0

; ---------------------------------------------------------------------------

; enum IconTilesProperties
ICONTILES_BYTESIZE: equ $C0
ICONTILES_OFFSET_EMPTY: equ $2F40

; ---------------------------------------------------------------------------

; enum ItemDefinitionOffsets
ITEMDEF_OFFSET_EQUIP_FLAGS: equ 0
ITEMDEF_OFFSET_TYPE: equ 4
ITEMDEF_OFFSET_EQUIP_EFFECT: equ 6
ITEMDEF_OFFSET_EQUIP_EFFECT_VALUE: equ 7
ITEMDEF_OFFSET_USE_RANGE: equ 8
ITEMDEF_OFFSET_USE_EFFECT: equ 9
ITEMDEF_OFFSET_ATTACK_RANGE: equ 12
ITEMDEF_OFFSET_ATTACK_EFFECT: equ 13
ITEMDEF_OFFSET_PRICE: equ 14

; ---------------------------------------------------------------------------

; enum ItemEntryBitmap
ITEMENTRY_BIT_BROKEN: equ 6
ITEMENTRY_BIT_EQUIPPED: equ 7

; ---------------------------------------------------------------------------

; enum ItemEntryMasks
ITEMENTRY_MASK_INDEX: equ $3F
ITEMENTRY_MASK_BROKEN_BIT: equ $40
ITEMENTRY_MASK_INDEX_AND_BROKEN_BIT: equ $7F
ITEMENTRY_MASK_EQUIPPED_BIT: equ $80

; ---------------------------------------------------------------------------

; enum ItemEquipEffects
EQUIPEFFECT_INCREASE_ATTACK: equ 0
EQUIPEFFECT_INCREASE_DEFENSE: equ 1
EQUIPEFFECT_INCREASE_AGILITY: equ 2
EQUIPEFFECT_INCREASE_MOVE: equ 3
EQUIPEFFECT_INCREASE_ATTACK_AND_SET_CRITICAL: equ 4
EQUIPEFFECT_INCREASE_ATTACK_AND_DEFENSE: equ 5 ; correctly works only with parameter = 1
EQUIPEFFECT_YOGURTIZE: equ 6
EQUIPEFFECT_NULL: equ 7
EQUIPEFFECT_RECOVER_HP: equ 8
EQUIPEFFECT_9: equ 9
EQUIPEFFECT_A: equ 10
EQUIPEFFECT_B: equ 11
EQUIPEFFECT_C: equ 12
EQUIPEFFECT_D: equ 13
EQUIPEFFECT_E: equ 14
EQUIPEFFECT_F: equ 15
EQUIPEFFECT_NONE: equ 255

; ---------------------------------------------------------------------------

; enum ItemTypes (bitfield)
ITEMTYPE_EVIL: equ 1
ITEMTYPE_WEAPON: equ $100
ITEMTYPE_RING: equ $200
ITEMTYPE_USEABLE: equ $400
ITEMTYPE_CANNOT_DROP: equ $800
ITEMTYPE_CONSUMABLE: equ $1000
ITEMTYPE_CURSED: equ $2000
ITEMTYPE_BREAKABLE: equ $4000
ITEMTYPE_RARE: equ $8000

; ---------------------------------------------------------------------------

; enum ItemTypeBitmap
ITEMTYPE_BIT_CURSE_SETTING: equ 0 ; 0 = has chance to paralyze, 1 = has chance to inflict damage back to attacker
ITEMTYPE_BIT_WEAPON: equ 8
ITEMTYPE_BIT_RING: equ 9
ITEMTYPE_BIT_USABLE: equ 10
ITEMTYPE_BIT_CANNOT_DROP: equ 11
ITEMTYPE_BIT_CONSUMABLE: equ 12
ITEMTYPE_BIT_CURSED: equ 13
ITEMTYPE_BIT_CHANCE_TO_CRACK: equ 14
ITEMTYPE_BIT_RARE: equ 15

; ---------------------------------------------------------------------------

; enum ItemTypeMasks
ITEMTYPE_MASK_CURSE_SETTING: equ 1
ITEMTYPE_MASK_WEAPON: equ $100
ITEMTYPE_MASK_RING: equ $200
ITEMTYPE_MASK_WEAPON_OR_RING: equ $300
ITEMTYPE_MASK_USABLE: equ $400

; ---------------------------------------------------------------------------

; enum Items (bitfield)
ITEM_MEDICAL_HERB: equ 0
ITEM_HEALING_SEED: equ 1
ITEM_ANTIDOTE: equ 2
ITEM_SHOWER_OF_CURE: equ 3
ITEM_ANGEL_WING: equ 4
ITEM_POWER_POTION: equ 5
ITEM_DEFENSE_POTION: equ 6
ITEM_LEGS_OF_HASTE: equ 7
ITEM_TURBO_PEPPER: equ 8
ITEM_BREAD_OF_LIFE: equ 9
ITEM_POWER_RING: equ 10
ITEM_SHIELD_RING: equ 11
ITEM_SPEED_RING: equ 12
ITEM_MOBILITY_RING: equ 13
ITEM_WHITE_RING: equ 14
ITEM_BLACK_RING: equ 15
ITEM_EVIL_RING: equ 16
ITEM_SUGOI_MIZUGI: equ 17
ITEM_ORB_OF_LIGHT: equ 18
ITEM_MOON_STONE: equ 19
ITEM_LUNAR_DEW: equ 20
ITEM_KITUI_HUKU: equ 21
ITEM_DOMINGO_EGG: equ 22
ITEM_KENJI: equ 23
ITEM_TEPPOU: equ 24
ITEM_KAKU_CHAN: equ 25
ITEM_YOUJI: equ 26
ITEM_GREAT_AXE: equ 27
ITEM_KINDAN_NOHAKO: equ 28
ITEM_SHORT_SWORD: equ 29
ITEM_MIDDLE_SWORD: equ 30
ITEM_LONG_SWORD: equ 31
ITEM_STEEL_SWORD: equ 32
ITEM_BROAD_SWORD: equ 33
ITEM_DOOM_BLADE: equ 34
ITEM_KATANA: equ 35
ITEM_ELVEN_ARROW: equ 36
ITEM_SWORD_OF_DARKNESS: equ 37
ITEM_SWORD_OF_LIGHT: equ 38
ITEM_CHAOS_BREAKER: equ 39
ITEM_BRONZE_LANCE: equ 40
ITEM_STEEL_LANCE: equ 41
ITEM_CHROME_LANCE: equ 42
ITEM_DEVIL_LANCE: equ 43
ITEM_HALBERD: equ 44
ITEM_SPEAR: equ 45
ITEM_POWER_SPEAR: equ 46
ITEM_VALKYRIE: equ 47
ITEM_HAND_AXE: equ 48
ITEM_MIDDLE_AXE: equ 49
ITEM_BATTLE_AXE: equ 50
ITEM_HEAT_AXE: equ 51
ITEM_ATLAS: equ 52
ITEM_WOODEN_STAFF: equ 53
ITEM_GUARDIAN_STAFF: equ 54
ITEM_HOLY_STAFF: equ 55
ITEM_POWER_STAFF: equ 56
ITEM_DEMON_ROD: equ 57
ITEM_YOGURT_RING: equ 58
ITEM_WOODEN_ARROW: equ 59
ITEM_STEEL_ARROW: equ 60
ITEM_ASSAULT_SHELL: equ 61
ITEM_BUSTER_SHOT: equ 62
ITEM_NOTHING: equ 63
ITEM_BROKEN: equ 64
ITEM_EQUIPPED: equ 128

; ---------------------------------------------------------------------------

; enum ItemProperties
WEAPONS_START: equ 27

; ---------------------------------------------------------------------------

; enum ItemSlots
ITEM_SLOTS_COUNTER: equ 3
ITEM_SLOTS_NUMBER: equ 4
EMPTY_ITEM_SLOT: equ $FF

; ---------------------------------------------------------------------------

; enum Maps
MAP_GUARDIANA_CASTLE: equ 0
MAP_WESTERN_GATE_OF_THE_ANCIENTS: equ 1
MAP_GUARDIANA: equ 2
MAP_GUARDIANA_RUINED: equ 3
MAP_ALTERONE: equ 4
MAP_ALTERONE_CASTLE: equ 5
MAP_RINDO: equ 6
MAP_BUSTOKE: equ 7
MAP_SHADE_ABBEY: equ 8
MAP_PAO1: equ 9
MAP_PAO2: equ 10
MAP_HEADQUARTERS: equ 11
MAP_CABIN: equ 12
MAP_MANARINA: equ 13
MAP_RUNEFAUST: equ 14
MAP_CIRCUS_TENT: equ 15
MAP_METAPHA: equ 16
MAP_EASTERN_GATE_OF_THE_ANCIENTS: equ 17
MAP_OVERWORLD_CHAPTER1: equ 18
MAP_OVERWORLD_CHAPTER2: equ 19
MAP_OVERWORLD_CHAPTER4: equ 20
MAP_OVERWORLD_CHAPTER3: equ 21
MAP_OVERWORLD_CHAPTER6: equ 22
MAP_OVERWORLD_CHAPTER7: equ 23
MAP_OVERWORLD_CHAPTER8: equ 24
MAP_OVERWORLD_CHAPTER5: equ 25
MAP_CAVERN_OF_DARKNESS: equ 26
MAP_DEMON_CASTLE: equ 27
MAP_QUARRY: equ 28
MAP_URANBATOL: equ 29
MAP_PROMPT: equ 30
MAP_DRAGONIA: equ 31
MAP_WARAL: equ 32
MAP_RUDO: equ 33
MAP_PROMPT_CASTLE: equ 34
MAP_PAO_BRIDGE: equ 35
MAP_TOWER_OF_THE_ANCIENTS: equ 36
MAP_RUNEFAUST_CASTLE: equ 37
MAP_SHIP_HEADQUARTERS: equ 38
MAP_CASTLE_OF_THE_ANCIENTS1: equ 39
MAP_RINDO_SHIP: equ 40
MAP_SHIP_DECK: equ 41
MAP_SHINING_PATH: equ 42
MAP_CASTLE_OF_THE_ANCIENTS2: equ 43

; ---------------------------------------------------------------------------

; enum MapChapters
MAP_CHAPTER_1: equ 0
MAP_CHAPTER_2: equ 1
MAP_CHAPTER_3: equ 2
MAP_CHAPTER_4: equ 3
MAP_CHAPTER_5: equ 4
MAP_CHAPTER_6: equ 5
MAP_CHAPTER_7: equ 6
MAP_CHAPTER_8: equ 7

; ---------------------------------------------------------------------------

; enum MapspriteProperties
PROMOTED_MAPSPRITES_START: equ 30

; ---------------------------------------------------------------------------

; enum Mapsprites
MAPSPRITE_MAX_SDMN: equ 0
MAPSPRITE_MAE_KNT: equ 1
MAPSPRITE_PELLE_KNT: equ 2
MAPSPRITE_KEN_KNT: equ 3
MAPSPRITE_VANKAR_KNT: equ 4
MAPSPRITE_EARNEST_KNT: equ 5
MAPSPRITE_ARTHUR_KNT: equ 6
MAPSPRITE_GORT_WARR: equ 7
MAPSPRITE_LUKE_WARR: equ 8
MAPSPRITE_GUNTZ_SKNT: equ 9
MAPSPRITE_ANRI_MAGE: equ 10
MAPSPRITE_ALEF_MAGE: equ 11
MAPSPRITE_TAO_MAGE: equ 12
MAPSPRITE_DOMINGO: equ 13
MAPSPRITE_LOWE_HEAL: equ 14
MAPSPRITE_KHRIS_HEAL: equ 15
MAPSPRITE_TORASU_HEAL: equ 16
MAPSPRITE_GONG_MONK: equ 17
MAPSPRITE_DIANE_ACHR: equ 18
MAPSPRITE_HANS_ACHR: equ 19
MAPSPRITE_LYLE_ASKT: equ 20
MAPSPRITE_AMON_BDMN: equ 21
MAPSPRITE_BALBAROY_BDMN: equ 22
MAPSPRITE_KOKICHI_WKNT: equ 23
MAPSPRITE_BLEU_DRGN: equ 24
MAPSPRITE_ADAM_RBT: equ 25
MAPSPRITE_ZYLO_WRWF: equ 26
MAPSPRITE_MUSASHI: equ 27
MAPSPRITE_HANZOU: equ 28
MAPSPRITE_JOGURT_1: equ 29
MAPSPRITE_MAX_HERO: equ 30
MAPSPRITE_MAE_PLDN: equ 31
MAPSPRITE_PELLE_PLDN: equ 32
MAPSPRITE_KEN_PLDN: equ 33
MAPSPRITE_VANKAR_PLDN: equ 34
MAPSPRITE_EARNEST_PLDN: equ 35
MAPSPRITE_ARTHUR_PLDN: equ 36
MAPSPRITE_GORT_GLDR: equ 37
MAPSPRITE_LUKE_GLDR: equ 38
MAPSPRITE_GUNTZ_SBRN: equ 39
MAPSPRITE_ANRI_WIZD: equ 40
MAPSPRITE_ALEF_WIZD: equ 41
MAPSPRITE_TAO_WIZD: equ 42
MAPSPRITE_BLUE_FLAME: equ 43
MAPSPRITE_LOWE_VICR: equ 44
MAPSPRITE_KHRIS_VICR: equ 45
MAPSPRITE_TORASU_VICR: equ 46
MAPSPRITE_GONG_MSMK: equ 47
MAPSPRITE_DIANE_BWMS: equ 48
MAPSPRITE_HANS_BWMS: equ 49
MAPSPRITE_LYLE_SKNT: equ 50
MAPSPRITE_AMON_SKYW: equ 51
MAPSPRITE_BALBAROY_SKYW: equ 52
MAPSPRITE_KOKICHI_SKYL: equ 53
MAPSPRITE_BLEU_GRDR: equ 54
MAPSPRITE_ADAM_CYBG: equ 55
MAPSPRITE_ZYLO_WFBN: equ 56
MAPSPRITE_NOVA: equ 57
MAPSPRITE_ANRI_OUTFIT: equ 58
MAPSPRITE_TAO_OUTFIT: equ 59
MAPSPRITE_GOBLIN: equ 60
MAPSPRITE_BOWRIDER: equ 61
MAPSPRITE_RUNE_KNIGHT: equ 62
MAPSPRITE_SILVER_KNIGHT: equ 63
MAPSPRITE_DURAHAN: equ 64
MAPSPRITE_DARK_DWARF: equ 65
MAPSPRITE_HORSEMAN: equ 66
MAPSPRITE_SNIPER: equ 67
MAPSPRITE_DARK_ELF: equ 68
MAPSPRITE_LIZARDMAN: equ 69
MAPSPRITE_ROCK: equ 70
MAPSPRITE_DARK_PRIEST: equ 71
MAPSPRITE_HIGH_PRIEST: equ 72
MAPSPRITE_CERBERUS: equ 73
MAPSPRITE_HELLHOUND: equ 74
MAPSPRITE_GARGOYLE: equ 75
MAPSPRITE_BELIAL: equ 76
MAPSPRITE_GOLEM: equ 77
MAPSPRITE_WEED: equ 78
MAPSPRITE_GHOUL: equ 79
MAPSPRITE_ZOMBIE: equ 80
MAPSPRITE_DARK_MAGE: equ 81
MAPSPRITE_MASTER_MAGE: equ 82
MAPSPRITE_DEMON_MASTER: equ 83
MAPSPRITE_GIANT_BAT: equ 84
MAPSPRITE_SEABAT: equ 85
MAPSPRITE_WORM: equ 86
MAPSPRITE_ICE_WORM: equ 87
MAPSPRITE_MINOTAUR: equ 88
MAPSPRITE_SPIRIT_OF_THE_POOL: equ 89
MAPSPRITE_MANNEQUIN: equ 90
MAPSPRITE_EVIL_PUPPET: equ 91
MAPSPRITE_DIRE_CLOWN: equ 92
MAPSPRITE_CART: equ 93
MAPSPRITE_SKELETON: equ 94
MAPSPRITE_JOGURT_2: equ 95
MAPSPRITE_MARIONETTE: equ 96
MAPSPRITE_JOGURT_3: equ 97
MAPSPRITE_ARMED_SKELETON: equ 98
MAPSPRITE_PEGASUS_KNIGHT: equ 99
MAPSPRITE_SWORD_OF_DARKNESS: equ 100
MAPSPRITE_CHIMAERA: equ 101
MAPSPRITE_WYVERN: equ 102
MAPSPRITE_BLUE_DRAGON: equ 103
MAPSPRITE_CONCH: equ 104
MAPSPRITE_SHELLFISH: equ 105
MAPSPRITE_ARTILLERY: equ 106
MAPSPRITE_STEEL_CLAW: equ 107
MAPSPRITE_TORCH_EYE: equ 108
MAPSPRITE_JET: equ 109
MAPSPRITE_DARKSOL: equ 110
MAPSPRITE_LASER_EYE: equ 111
MAPSPRITE_ELLIOTT: equ 112
MAPSPRITE_BALBAZAK: equ 113
MAPSPRITE_MISHAELA: equ 114
MAPSPRITE_CHAOS: equ 115
MAPSPRITE_RAMLADU: equ 116
MAPSPRITE_KANE: equ 117
MAPSPRITE_COLOSSUS: equ 118
MAPSPRITE_DARK_DRAGON: equ 119
MAPSPRITE_JOGURT_4: equ 120
MAPSPRITE_VARIOS: equ 121
MAPSPRITE_WOUNDED_SOLDIER: equ 122
MAPSPRITE_SHEEP: equ 123
MAPSPRITE_MERMAID: equ 124
MAPSPRITE_WITCH: equ 125
MAPSPRITE_OTRANT: equ 126
MAPSPRITE_BOKEN: equ 127
MAPSPRITE_OLD_MAN: equ 128
MAPSPRITE_OLD_WOMAN: equ 129
MAPSPRITE_MIDDLE_AGED_MAN: equ 130
MAPSPRITE_MIDDLE_AGED_WOMAN: equ 131
MAPSPRITE_YOUNG_MAN: equ 132
MAPSPRITE_YOUNG_WOMAN: equ 133
MAPSPRITE_BOY: equ 134
MAPSPRITE_GIRL: equ 135
MAPSPRITE_DOG: equ 136
MAPSPRITE_CAT: equ 137
MAPSPRITE_CHICKEN: equ 138
MAPSPRITE_MERCHANT: equ 139
MAPSPRITE_FAT_MAN: equ 140
MAPSPRITE_FRIAR: equ 141
MAPSPRITE_KING: equ 142
MAPSPRITE_MINISTER: equ 143
MAPSPRITE_QUEEN_KORON: equ 144
MAPSPRITE_PRINCESS: equ 145
MAPSPRITE_SOLDIER: equ 146
MAPSPRITE_MAID: equ 147
MAPSPRITE_HERMIT: equ 148
MAPSPRITE_MAX_STABBING_DARK_DRAGON: equ 149
MAPSPRITE_GUARD: equ 150 ; unused
MAPSPRITE_MAGE: equ 151
MAPSPRITE_BOAT: equ 152
MAPSPRITE_SHIP: equ 153
MAPSPRITE_CARRIAGE: equ 154
MAPSPRITE_MAYOR: equ 155
MAPSPRITE_WATER_SPLASH: equ 156
MAPSPRITE_MAX_DROWNING: equ 157
MAPSPRITE_NUN: equ 158
MAPSPRITE_JOGURT_5: equ 159
MAPSPRITE_160: equ 160
MAPSPRITE_161: equ 161

; ---------------------------------------------------------------------------

; enum MenuActions
CHURCH_CURE_POISON_COST: equ 10
CHURCH_RAISE_COST_PER_LEVEL: equ 10
CHURCH_BASE_PROMOTION_LEVEL: equ 10
CHURCH_CURE_CURSE_COST: equ 20

; ---------------------------------------------------------------------------

; enum Menus
MAIN_MENU: equ 1
MAGIC_MENU: equ 2
ITEM_MENU: equ 4
SHOP_MENU: equ 5
HEADQUARTERS_MENU: equ 8
CHURCH_MENU: equ 9

; ---------------------------------------------------------------------------

; enum Messages
MESSAGE_ADVICES_START: equ 750

; ---------------------------------------------------------------------------

; enum Portraits
PORTRAIT_MAX_SDMN: equ 0
PORTRAIT_MAE: equ 1
PORTRAIT_PELLE: equ 2
PORTRAIT_KEN: equ 3
PORTRAIT_VANKAR: equ 4
PORTRAIT_EARNEST: equ 5
PORTRAIT_ARTHUR: equ 6
PORTRAIT_GORT: equ 7
PORTRAIT_LUKE: equ 8
PORTRAIT_GUNTZ: equ 9
PORTRAIT_ANRI: equ 10
PORTRAIT_ALEF: equ 11
PORTRAIT_TAO: equ 12
PORTRAIT_DOMINGO: equ 13
PORTRAIT_LOWE: equ 14
PORTRAIT_KHRIS: equ 15
PORTRAIT_TORASU: equ 16
PORTRAIT_GONG: equ 17
PORTRAIT_DIANE: equ 18
PORTRAIT_HANS: equ 19
PORTRAIT_LYLE: equ 20
PORTRAIT_AMON: equ 21
PORTRAIT_BALBAROY: equ 22
PORTRAIT_KOKICHI: equ 23
PORTRAIT_BLEU_DRGN: equ 24
PORTRAIT_ADAM_RBT: equ 25
PORTRAIT_ZYLO: equ 26
PORTRAIT_MUSASHI: equ 27
PORTRAIT_HANZOU: equ 28
PORTRAIT_JOGURT: equ 29
PORTRAIT_VARIOS: equ 30
PORTRAIT_ELLIOTT: equ 31
PORTRAIT_BALBAZAK: equ 32
PORTRAIT_MISHAELA: equ 33
PORTRAIT_CHAOS: equ 34
PORTRAIT_RAMLADU: equ 35
PORTRAIT_KANE_MASKED: equ 36
PORTRAIT_KANE_UNMASKED: equ 37
PORTRAIT_COLOSSUS: equ 38
PORTRAIT_DARK_DRAGON: equ 39
PORTRAIT_DARKSOL: equ 40
PORTRAIT_NOVA: equ 41
PORTRAIT_SHELL: equ 42
PORTRAIT_MAX_HERO: equ 43
PORTRAIT_BLEU_GRDR: equ 44
PORTRAIT_ADAM_CYBG: equ 45
PORTRAIT_KING: equ 46
PORTRAIT_FRIAR: equ 47
PORTRAIT_OTRANT: equ 48
PORTRAIT_GUARDIANA_KING_1: equ 49
PORTRAIT_GUARDIANA_KING_2: equ 50
PORTRAIT_GUARDIANA_KING_3: equ 51
PORTRAIT_NONE: equ 255

; ---------------------------------------------------------------------------

; enum RangeDefinitionOffsets
RANGE_OFFSET_MAX_DISTANCE: equ 0
RANGE_OFFSET_MIN_DISTANCE: equ 1
RANGE_OFFSET_AREA: equ 2
RANGE_OFFSET_GROUP: equ 3
RANGE_OFFSET_ROUTINE: equ 4

; ---------------------------------------------------------------------------

; enum RangeDefinitionGroups (bitfield)
RANGE_GROUP_NONE: equ 0
RANGE_GROUP_FRIENDS: equ 1
RANGE_GROUP_FOES: equ 2
RANGE_GROUP_FRIENDS_AND_FOES: equ 3
RANGE_GROUP_ALL: equ 4

; ---------------------------------------------------------------------------

; enum RangeDefinitionGroupBitmap
RANGE_GROUP_BIT_FRIENDS: equ 0
RANGE_GROUP_BIT_FOES: equ 1
RANGE_GROUP_BIT_ALL: equ 2

; ---------------------------------------------------------------------------

; enum RangeDefinitionGroupMasks
RANGE_GROUP_MASK_TARGETS: equ 3
RANGE_GROUP_MASK_ALL: equ $FC

; ---------------------------------------------------------------------------

; enum RangeEntrySpecialRanges
SPECIAL_RANGE_LASER_EYE: equ 128
SPECIAL_RANGE_TORCH_EYE: equ 129
SPECIAL_RANGE_UNUSED: equ 130

; ---------------------------------------------------------------------------

; enum Ranges
RANGE_0: equ 0
RANGE_1: equ 1 ; 1-15 = unused
RANGE_2: equ 2
RANGE_3: equ 3
RANGE_4: equ 4
RANGE_5: equ 5
RANGE_6: equ 6
RANGE_7: equ 7
RANGE_8: equ 8
RANGE_9: equ 9
RANGE_10: equ 10
RANGE_11: equ 11
RANGE_12: equ 12
RANGE_13: equ 13
RANGE_14: equ 14
RANGE_15: equ 15
RANGE_MELEE: equ 16
RANGE_ARROW_LONG: equ 17 ; arrows (long)
RANGE_ARROW_SHORT: equ 18 ; arrows (short)
RANGE_SPEAR_AND_LASER: equ 19 ; spears, laser
RANGE_HEAL_1: equ 20
RANGE_HEAL_2: equ 21
RANGE_HEAL_3: equ 22
RANGE_HEAL_4: equ 23
RANGE_AURA_1: equ 24
RANGE_AURA_2: equ 25
RANGE_AURA_3: equ 26
RANGE_AURA_4: equ 27
RANGE_DETOX_1: equ 28
RANGE_DETOX_2: equ 29
RANGE_QUICK_1: equ 30
RANGE_SLOW_1: equ 31
RANGE_BOOST: equ 32
RANGE_DISPEL: equ 33
RANGE_SHIELD: equ 34
RANGE_MUDDLE: equ 35
RANGE_BLAZE_1: equ 36
RANGE_BLAZE_2: equ 37
RANGE_BLAZE_3: equ 38
RANGE_BLAZE_4: equ 39
RANGE_FREEZE_1: equ 40
RANGE_FREEZE_2: equ 41
RANGE_FREEZE_3: equ 42
RANGE_FREEZE_4: equ 43
RANGE_BOLT_1: equ 44
RANGE_BOLT_2: equ 45
RANGE_BOLT_3: equ 46
RANGE_BOLT_4: equ 47
RANGE_DESOUL_1: equ 48
RANGE_DESOUL_2: equ 49
RANGE_EGRESS: equ 50
RANGE_33: equ 51 ; unused
RANGE_SLEEP: equ 52
RANGE_BREATH: equ 53
RANGE_LASER_EYE: equ 54
RANGE_MACHINE_GUN: equ 55
RANGE_DEMON_BLAZE_1: equ 56
RANGE_DEMON_BLAZE_2: equ 57
RANGE_TORCH_EYE: equ 58
RANGE_DEMON_ROD: equ 59
RANGE_ITEM: equ 60
RANGE_KINDAN_NOHAKO: equ 61
RANGE_QUICK_2: equ 62
RANGE_SLOW_2: equ 63
RANGE_NONE: equ 255

; ---------------------------------------------------------------------------

; enum Regions (bitfield)
REGION_1: equ 2
REGION_2: equ 4
REGION_3: equ 8
REGION_4: equ $10
REGION_5: equ $20
REGION_6: equ $40
REGION_7: equ $80

; ---------------------------------------------------------------------------

; enum ShopTypes
SHOPTYPE_WEAPONS: equ 0
SHOPTYPE_ITEMS: equ 1

; ---------------------------------------------------------------------------

; enum SoundCommands
SOUND_COMMAND_INIT_DRIVER: equ $20
SOUND_COMMAND_WAIT_MUSIC_END: equ $F0
SOUND_COMMAND_PLAY_PREVIOUS_MUSIC: equ $FB
SOUND_COMMAND_FADE_OUT: equ $FD
SOUND_COMMAND_254: equ $FE
SOUND_COMMAND_18564: equ $4884
SOUND_COMMAND_GET_D0_PARAMETER: equ $FFFF

; ---------------------------------------------------------------------------

; enum SoundCommands_Music
MUSIC_NOTHING: equ 0
MUSIC_JOIN: equ 1
MUSIC_CURSED_ITEM: equ 2
MUSIC_TOWN: equ 3
MUSIC_SUSPEND: equ 4
MUSIC_SIMONE: equ 5
MUSIC_ATTACK: equ 6
MUSIC_INTRO: equ 7
MUSIC_MAIN_THEME: equ 8
MUSIC_BATTLE_1: equ 9
MUSIC_BATTLE_2: equ 10
MUSIC_SAD_THEME: equ 11
MUSIC_PROMOTION: equ 12
MUSIC_ITEM: equ 13
MUSIC_SAVE: equ 14
MUSIC_MAX_DIED: equ 15
MUSIC_BATTLE_3: equ 16
MUSIC_NOTHING_0: equ 17
MUSIC_HQ: equ 18
MUSIC_SHIP: equ 19
MUSIC_CHAPTER_END: equ 20
MUSIC_REVIVE: equ 21
MUSIC_SAD_JOIN: equ 22
MUSIC_DARKSOL_BATTLE: equ 23
MUSIC_SAD_TOWN: equ 24
MUSIC_NOTHING_1: equ 25
MUSIC_NOTHING_2: equ 26
MUSIC_NOTHING_3: equ 27
MUSIC_NOTHING_4: equ 28
MUSIC_NOTHING_5: equ 29
MUSIC_NOTHING_6: equ 30
MUSIC_EARTHQUAKE: equ 31
MUSIC_STOP: equ 32
MUSIC_BATTLE_4: equ 33
MUSIC_CASTLE: equ 34
MUSIC_TITLE: equ 35
MUSIC_FINAL_BATTLE: equ 36
MUSIC_RISE_OF_THE_CASTLE: equ 37
MUSIC_CREDITS: equ 38
MUSIC_ENDING: equ 39

; ---------------------------------------------------------------------------

; enum SoundCommands_Sfx
SFX_MENU_SWITCH: equ 65
SFX_MENU_SELECTION: equ 66
SFX_VALIDATION: equ 67
SFX_REFUSAL: equ 68
SFX_DIALOG_BLEEP_1: equ 69
SFX_DIALOG_BLEEP_2: equ 70
SFX_DIALOG_BLEEP_3: equ 71
SFX_DIALOG_BLEEP_4: equ 72
SFX_DIALOG_BLEEP_5: equ 73
SFX_DIALOG_BLEEP_6: equ 74
SFX_DIALOG_BLEEP_7: equ 75
SFX_DIALOG_BLEEP_8: equ 76
SFX_SPELL_CAST: equ 77
SFX_HIT: equ 78
SFX_NOTHING_1: equ 79
SFX_NOTHING_2: equ 80
SFX_TINKLING: equ 81
SFX_MONSTER_1: equ 82
SFX_MONSTER_2: equ 83
SFX_MONSTER_3: equ 84
SFX_WARP: equ 85
SFX_DOOR_OPEN_HIGH_PITCH: equ 86
SFX_BOLT_SPELL: equ 87
SFX_DOOR_OPEN: equ 88
SFX_DEMON_SMILE: equ 89
SFX_CRITICAL_HIT: equ 90
SFX_JOGURT: equ 91
SFX_TRAIN_WHISTLE: equ 92
SFX_LASER: equ 93
SFX_SWORDS_HIT: equ 94
SFX_FIRE_BREATH: equ 95
SFX_MACHINE_GUN: equ 96
SFX_TREASURE_CHEST: equ 97
SFX_WALKING: equ 98
SFX_FALLING: equ 99
SFX_BOW_MASTER: equ 100
SFX_HEALING: equ 101
SFX_DESOUL_HOVERING: equ 102
SFX_LIGHTNING_BREATH: equ 103
SFX_METALLIC: equ 104
SFX_SWORD_BEAM: equ 105

; ---------------------------------------------------------------------------

; enum SpecialAttacks
SPECIAL_150_CRITICAL: equ 0
SPECIAL_200_CRITICAL: equ 1
SPECIAL_STEAL_MP: equ 2
SPECIAL_STEAL_HP: equ 3
SPECIAL_POISON: equ 5
SPECIAL_SLEEP: equ 6
SPECIAL_NONE: equ 255

; ---------------------------------------------------------------------------

; enum SpellAnimationTypes
SPELLANIM_TYPE_BLAZE: equ 0
SPELLANIM_TYPE_FREEZE: equ 1
SPELLANIM_TYPE_ICE_BREATH: equ 2
SPELLANIM_TYPE_FLYING_DRAGONS: equ 3
SPELLANIM_TYPE_ASSAULT_SHELL: equ 4
SPELLANIM_TYPE_DESOUL: equ 5
SPELLANIM_TYPE_DEBUFF: equ 6
SPELLANIM_TYPE_BOLT: equ 7
SPELLANIM_TYPE_HEALING: equ 8
SPELLANIM_TYPE_HEALING_0: equ 9
SPELLANIM_TYPE_FIRE_BREATH: equ $A
SPELLANIM_TYPE_DEMON_BLAZE: equ $B
SPELLANIM_TYPE_NOTHING: equ $C
SPELLANIM_TYPE_NOTHING_0: equ $D
SPELLANIM_TYPE_NOTHING_1: equ $E
SPELLANIM_TYPE_MACHINE_GUN: equ $F
SPELLANIM_TYPE_CROSSBOW: equ $10
SPELLANIM_TYPE_LIGHTNING_BREATH: equ $11
SPELLANIM_TYPE_LASER: equ $12
SPELLANIM_TYPE_BUSTER_SHOT: equ $13
SPELLANIM_TYPE_ENERGY_WAVE: equ $14
SPELLANIM_TYPE_ENERGY_BLAST: equ $15

; ---------------------------------------------------------------------------

; enum SpellAnimationVariationEntry
SPELLANIM_MIRRORED_BIT: equ $80

; ---------------------------------------------------------------------------

; enum SpellEntityOffsets
SPELLENTITY_OFFSET_X: equ 0
SPELLENTITY_OFFSET_Y: equ 2
SPELLENTITY_OFFSET_EXISTS: equ 4
SPELLENTITY_OFFSET_FRAME: equ 6

; ---------------------------------------------------------------------------

; enum SpellcastColors
SPELLCAST_COLOR_GOLD: equ 0 ; $6CC
SPELLCAST_COLOR_ORANGE: equ 1 ; $08E
SPELLCAST_COLOR_PURPLE: equ 2 ; $E04
SPELLCAST_COLOR_DARK_GREY: equ 3 ; $444
SPELLCAST_COLOR_RED: equ 4 ; $02E
SPELLCAST_COLOR_MAGENTA: equ 5 ; $82A
SPELLCAST_COLOR_AZURE: equ 6 ; $E42
SPELLCAST_COLOR_YELLOW: equ 7 ; $2EE
SPELLCAST_COLOR_GREEN: equ 8 ; $2E4
SPELLCAST_COLOR_CINNABAR: equ 9 ; $24E
SPELLCAST_COLOR_LIGHT_GREY: equ $A ; $888
SPELLCAST_COLOR_BLUE: equ $B ; $E00
SPELLCAST_COLOR_CELADON: equ $C ; $4E0

; ---------------------------------------------------------------------------

; enum SpellcastColorsPerSpell
HEAL_SPELLCAST_COLOR: equ 0
DETOX_SPELLCAST_COLOR: equ 1
DESOUL_SPELLCAST_COLOR: equ 2
SLOW_SPELLCAST_COLOR: equ 3
BLAZE_SPELLCAST_COLOR: equ 4
SLEEP_SPELLCAST_COLOR: equ 5
FREEZE_SPELLCAST_COLOR: equ 6
ICE_BREATH_SPELLCAST_COLOR: equ 6
BOLT_SPELLCAST_COLOR: equ 7
MUDDLE_SPELLCAST_COLOR: equ 8
BOOST_SPELLCAST_COLOR: equ 9
DISPEL_SPELLCAST_COLOR: equ $A
QUICK_SPELLCAST_COLOR: equ $B
SHIELD_SPELLCAST_COLOR: equ $C

; ---------------------------------------------------------------------------

; enum SpellDefinitionOffsets
SPELL_OFFSET_RANGE: equ 0
SPELL_OFFSET_EFFECT: equ 1
SPELL_OFFSET_MP_COST: equ 2

; ---------------------------------------------------------------------------

; enum SpellEntryMasks
SPELLENTRY_MASK_INDEX: equ $3F
SPELLENTRY_MASK_LEVEL: equ $C0

; ---------------------------------------------------------------------------

; enum Spells (bitfield)
SPELL_HEAL: equ 0 ; 00: HEAL
SPELL_AURA: equ 1 ; 01: AURA
SPELL_DETOX: equ 2 ; 02: DETOX
SPELL_QUICK: equ 3 ; 03: QUICK
SPELL_SLOW: equ 4 ; 04: SLOW
SPELL_BOOST: equ 5 ; 05: BOOST
SPELL_DISPEL: equ 6 ; 06: DISPEL
SPELL_SHIELD: equ 7 ; 07: SHIELD
SPELL_MUDDLE: equ 8 ; 08: MUDDLE
SPELL_BLAZE: equ 9 ; 09: BLAZE
SPELL_FREEZE: equ 10 ; 10: FREEZE
SPELL_BOLT: equ 11 ; 11: BOLT
SPELL_DESOUL: equ 12 ; 12: DESOUL
SPELL_EGRESS: equ 13 ; 13: EGRESS
SPELL_DUMMY: equ 14 ; 14: dummy
SPELL_SLEEP: equ 15 ; 15: SLEEP
SPELL_NOTHING: equ 63
LV_1: equ 0
LV_2: equ 64
LV_3: equ 128
LV_4: equ 192

; ---------------------------------------------------------------------------

; enum SpellSlots
SPELL_SLOTS_COUNTER: equ 3
SPELL_SLOTS_NUMBER: equ 4
EMPTY_SPELL_SLOT: equ $FF

; ---------------------------------------------------------------------------

; enum Sram
SAVE_SLOT_SIZE: equ 2230
SRAM_COUNTER_MINUS_ONE: equ 8190

; ---------------------------------------------------------------------------

; enum StatLimits
STATCAP_MOVE: equ 9
STATCAP_ATTACK: equ 99
STATCAP_DEFENSE: equ 99
STATCAP_AGILITY: equ 99
STATCAP_CRITICAL: equ 99
STATCAP_LEVEL: equ 99
STATCAP_HP: equ 99
STATCAP_MP: equ 99

; ---------------------------------------------------------------------------

; enum StatusEffectBitmap
STATUSEFFECT_BIT_POISON: equ 0
STATUSEFFECT_BIT_SLEEP: equ 1
STATUSEFFECT_BIT_CURSE: equ 2
STATUSEFFECT_BIT_JOGURT: equ 3
STATUSEFFECT_BIT_MUDDLE: equ 4
STATUSEFFECT_BIT_DISPEL: equ 6
STATUSEFFECT_BIT_QUICK: equ 8
STATUSEFFECT_BIT_SLOW: equ 10
STATUSEFFECT_BIT_BOOST: equ 12
STATUSEFFECT_BIT_SHIELD: equ 14

; ---------------------------------------------------------------------------

; enum StatusEffects (bitfield)
STATUSEFFECT_POISON: equ 1
STATUSEFFECT_SLEEP: equ 2
STATUSEFFECT_CURSE: equ 4
STATUSEFFECT_JOGURT: equ 8
STATUSEFFECT_MUDDLE: equ $30
STATUSEFFECT_DISPEL: equ $C0
STATUSEFFECT_QUICK: equ $300
STATUSEFFECT_SLOW: equ $C00
STATUSEFFECT_BOOST: equ $3000
STATUSEFFECT_SHIELD: equ $C000

; ---------------------------------------------------------------------------

; enum StatusEffect_None
STATUSEFFECT_NONE: equ 0

; ---------------------------------------------------------------------------

; enum StatusEffectProperties
STATUSEFFECT_MASK_COUNTER: equ 3
STATUSEFFECT_COUNTERS_COUNTER: equ 5
STATUSEFFECT_COUNTERS_NUMBER: equ 6
STATUSEFFECT_BASE_CHANCE_TO_HIT: equ 37
STATUSEFFECT_MASK: equ 65535

; ---------------------------------------------------------------------------

; enum Traps
SOUND_COMMAND: equ 0
OPEN_MESSAGE_WINDOW: equ 5
CLOSE_MESSAGE_WINDOW: equ 6
CREATE_MESSAGE_WINDOW: equ 7
DISPLAY_MESSAGE: equ 8

; ---------------------------------------------------------------------------

; enum TurnOrderProperties
TURN_ORDER_ENTRY_SIZE: equ 2
NEXT_TURN_ORDER_ENTRY: equ 2
TURN_ORDER_LONGWORDS_COUNTER: equ 15
TURN_ORDER_SORT_MAIN_COUNTER: equ 29
TURN_ORDER_SORT_INNER_COUNTER: equ 30
TURN_ORDER_ENTRIES_COUNTER: equ 31
TURN_ORDER_ENTRIES_NUMBER: equ 32

; ---------------------------------------------------------------------------

; enum VdpSprites
VDP_SPRITES_COUNTER: equ 63

; ---------------------------------------------------------------------------

; enum VdpTiles (bitfield)
VDPTILE_STATUS_BAR_1: equ 1
VDPTILE_STATUS_BAR_2: equ 2
VDPTILE_STATUS_BAR_3: equ 3
VDPTILE_STATUS_BAR_4: equ 4
VDPTILE_STATUS_BAR_5: equ 5
VDPTILE_STATUS_BAR_6: equ 6
VDPTILE_STATUS_BAR_7: equ 7
VDPTILE_STATUS_BAR_8: equ 8
VDPTILE_STATUS_BAR_9: equ 9
VDPTILE_STATUS_BAR_10: equ $A
VDPTILE_STATUS_BAR_11: equ $B
VDPTILE_STATUS_BAR_12: equ $C
VDPTILE_STATUS_BAR_13: equ $D
VDPTILE_STATUS_BAR_14: equ $E
VDPTILE_STATUS_BAR_15: equ $F
VDPTILE_STATUS_BAR_16: equ $10
VDPTILE_STATUS_BAR_17: equ $11
VDPTILE_STATUS_BAR_18: equ $12
VDPTILE_STATUS_BAR_19: equ $13
VDPTILE_STATUS_BAR_20: equ $14
VDPTILE_STATUS_BAR_21: equ $15
VDPTILE_STATUS_BAR_22: equ $16
VDPTILE_STATUS_BAR_23: equ $17
VDPTILE_STATUS_BAR_24: equ $18
VDPTILE_STATUS_BAR_25: equ $19
VDPTILE_STATUS_BAR_26: equ $1A
VDPTILE_STATUS_BAR_27: equ $1B
VDPTILE_STATUS_BAR_28: equ $1C
VDPTILE_STATUS_BAR_29: equ $1D
VDPTILE_STATUS_BAR_30: equ $1E
VDPTILE_STATUS_BAR_31: equ $1F
VDPTILE_ASCII_SPACE: equ $20
VDPTILE_ASCII_EXCLAMATION_MARK: equ $21
VDPTILE_ASCII_QUOTATION_MARK: equ $22
VDPTILE_ASCII_NUMBER_SIGN: equ $23
VDPTILE_36: equ $24 ; price tag string
VDPTILE_ASCII_PERCENT_SIGN: equ $25
VDPTILE_ASCII_AMPERSAND: equ $26
VDPTILE_ASCII_APOSTROPHE: equ $27
VDPTILE_ASCII_OPENING_ROUND_BRACKET: equ $28
VDPTILE_ASCII_CLOSING_ROUND_BRACKET: equ $29
VDPTILE_ASCII_MULTIPLICATION_SIGN: equ $2A
VDPTILE_ASCII_PLUS_SIGN: equ $2B
VDPTILE_ASCII_COMMA: equ $2C
VDPTILE_ASCII_MINUS_SIGN: equ $2D
VDPTILE_ASCII_DOT: equ $2E
VDPTILE_ASCII_SLASH: equ $2F
VDPTILE_ASCII_NUMBER_ZERO: equ $30
VDPTILE_ASCII_NUMBER_ONE: equ $31
VDPTILE_ASCII_NUMBER_TWO: equ $32
VDPTILE_ASCII_NUMBER_THREE: equ $33
VDPTILE_ASCII_NUMBER_FOUR: equ $34
VDPTILE_ASCII_NUMBER_FIVE: equ $35
VDPTILE_ASCII_NUMBER_SIX: equ $36
VDPTILE_ASCII_NUMBER_SEVEN: equ $37
VDPTILE_ASCII_NUMBER_EIGHT: equ $38
VDPTILE_ASCII_NUMBER_NINE: equ $39
VDPTILE_ASCII_COLON: equ $3A
VDPTILE_59: equ $3B
VDPTILE_STATUSEFFECT_DISPEL_A: equ $3C
VDPTILE_ASCII_EQUALS_SIGN: equ $3D
VDPTILE_STATUSEFFECT_DISPEL_B: equ $3E
VDPTILE_ASCII_QUESTION_MARK: equ $3F
VDPTILE_ASCII_AT_SIGN: equ $40
VDPTILE_ASCII_UPPERCASE_A: equ $41
VDPTILE_ASCII_UPPERCASE_B: equ $42
VDPTILE_ASCII_UPPERCASE_C: equ $43
VDPTILE_ASCII_UPPERCASE_D: equ $44
VDPTILE_ASCII_UPPERCASE_E: equ $45
VDPTILE_ASCII_UPPERCASE_F: equ $46
VDPTILE_ASCII_UPPERCASE_G: equ $47
VDPTILE_ASCII_UPPERCASE_H: equ $48
VDPTILE_ASCII_UPPERCASE_I: equ $49
VDPTILE_ASCII_UPPERCASE_J: equ $4A
VDPTILE_ASCII_UPPERCASE_K: equ $4B
VDPTILE_ASCII_UPPERCASE_L: equ $4C
VDPTILE_ASCII_UPPERCASE_M: equ $4D
VDPTILE_ASCII_UPPERCASE_N: equ $4E
VDPTILE_ASCII_UPPERCASE_O: equ $4F
VDPTILE_ASCII_UPPERCASE_P: equ $50
VDPTILE_ASCII_UPPERCASE_Q: equ $51
VDPTILE_ASCII_UPPERCASE_R: equ $52
VDPTILE_ASCII_UPPERCASE_S: equ $53
VDPTILE_ASCII_UPPERCASE_T: equ $54
VDPTILE_ASCII_UPPERCASE_U: equ $55
VDPTILE_ASCII_UPPERCASE_V: equ $56
VDPTILE_ASCII_UPPERCASE_W: equ $57
VDPTILE_ASCII_UPPERCASE_X: equ $58
VDPTILE_ASCII_UPPERCASE_Y: equ $59
VDPTILE_ASCII_UPPERCASE_Z: equ $5A
VDPTILE_STATUSEFFECT_MUDDLE_A: equ $5B
VDPTILE_92: equ $5C
VDPTILE_STATUSEFFECT_MUDDLE_B: equ $5D
VDPTILE_94: equ $5E
VDPTILE_ASCII_UNDERSCORE: equ $5F
VDPTILE_96: equ $60
VDPTILE_ASCII_LOWERCASE_A: equ $61
VDPTILE_ASCII_LOWERCASE_B: equ $62
VDPTILE_ASCII_LOWERCASE_C: equ $63
VDPTILE_ASCII_LOWERCASE_D: equ $64
VDPTILE_ASCII_LOWERCASE_E: equ $65
VDPTILE_ASCII_LOWERCASE_F: equ $66
VDPTILE_ASCII_LOWERCASE_G: equ $67
VDPTILE_ASCII_LOWERCASE_H: equ $68
VDPTILE_ASCII_LOWERCASE_I: equ $69
VDPTILE_ASCII_LOWERCASE_J: equ $6A
VDPTILE_ASCII_LOWERCASE_K: equ $6B
VDPTILE_ASCII_LOWERCASE_L: equ $6C
VDPTILE_ASCII_LOWERCASE_M: equ $6D
VDPTILE_ASCII_LOWERCASE_N: equ $6E
VDPTILE_ASCII_LOWERCASE_O: equ $6F
VDPTILE_ASCII_LOWERCASE_P: equ $70
VDPTILE_ASCII_LOWERCASE_Q: equ $71
VDPTILE_ASCII_LOWERCASE_R: equ $72
VDPTILE_ASCII_LOWERCASE_S: equ $73
VDPTILE_ASCII_LOWERCASE_T: equ $74
VDPTILE_ASCII_LOWERCASE_U: equ $75
VDPTILE_ASCII_LOWERCASE_V: equ $76
VDPTILE_ASCII_LOWERCASE_W: equ $77
VDPTILE_ASCII_LOWERCASE_X: equ $78
VDPTILE_ASCII_LOWERCASE_Y: equ $79
VDPTILE_ASCII_LOWERCASE_Z: equ $7A
VDPTILE_123: equ $7B
VDPTILE_124: equ $7C
VDPTILE_CL_SYMBOL: equ $7D
VDPTILE_FW_SYMBOL: equ $7E
VDPTILE_EQ_SYMBOL: equ $7F
VDPTILE_WINDOW_CORNER: equ $80
VDPTILE_WINDOW_HORIZONTAL_BORDER: equ $81
VDPTILE_MINISTATUS_P_WITH_BAR: equ $82
VDPTILE_MINISTATUS_P: equ $83
VDPTILE_VERTICAL_ARROWHEAD: equ $84
VDPTILE_HORIZONTAL_ARROWHEAD: equ $85
VDPTILE_ASCII_HYPHEN: equ $86
VDPTILE_135: equ $87
VDPTILE_136: equ $88
VDPTILE_137: equ $89
VDPTILE_138: equ $8A
VDPTILE_139: equ $8B
VDPTILE_140: equ $8C
VDPTILE_141: equ $8D
VDPTILE_142: equ $8E
VDPTILE_ORANGE_EQUALS_SIGN: equ $8F
VDPTILE_WINDOW_VERTICAL_BORDER: equ $90
VDPTILE_ORANGE_EXCLAMATION_MARK: equ $91
VDPTILE_ORANGE_QUOTATION_MARK: equ $92
VDPTILE_ORANGE_NUMBER_SIGN: equ $93
VDPTILE_ORANGE_COLON: equ $94
VDPTILE_ORANGE_PERCENT_SIGN: equ $95
VDPTILE_ORANGE_AMPERSAND: equ $96
VDPTILE_ORANGE_APOSTROPHE: equ $97
VDPTILE_ORANGE_OPENING_ROUND_BRACKET: equ $98
VDPTILE_ORANGE_CLOSING_ROUND_BRACKET: equ $99
VDPTILE_ORANGE_MULTIPLICATION_SIGN: equ $9A
VDPTILE_ORANGE_PLUS_SIGN: equ $9B
VDPTILE_ORANGE_COMMA: equ $9C
VDPTILE_ORANGE_MINUS_SIGN: equ $9D
VDPTILE_ORANGE_DOT: equ $9E
VDPTILE_ORANGE_SLASH: equ $9F
VDPTILE_ORANGE_QUESTION_MARK: equ $A0
VDPTILE_ORANGE_UPPERCASE_A: equ $A1
VDPTILE_ORANGE_UPPERCASE_B: equ $A2
VDPTILE_ORANGE_UPPERCASE_C: equ $A3
VDPTILE_ORANGE_UPPERCASE_D: equ $A4
VDPTILE_ORANGE_UPPERCASE_E: equ $A5
VDPTILE_ORANGE_UPPERCASE_F: equ $A6
VDPTILE_ORANGE_UPPERCASE_G: equ $A7
VDPTILE_ORANGE_UPPERCASE_H: equ $A8
VDPTILE_ORANGE_UPPERCASE_I: equ $A9
VDPTILE_ORANGE_UPPERCASE_J: equ $AA
VDPTILE_ORANGE_UPPERCASE_K: equ $AB
VDPTILE_ORANGE_UPPERCASE_L: equ $AC
VDPTILE_ORANGE_UPPERCASE_M: equ $AD
VDPTILE_ORANGE_UPPERCASE_N: equ $AE
VDPTILE_ORANGE_UPPERCASE_O: equ $AF
VDPTILE_ORANGE_UPPERCASE_P: equ $B0
VDPTILE_ORANGE_UPPERCASE_Q: equ $B1
VDPTILE_ORANGE_UPPERCASE_R: equ $B2
VDPTILE_ORANGE_UPPERCASE_S: equ $B3
VDPTILE_ORANGE_UPPERCASE_T: equ $B4
VDPTILE_ORANGE_UPPERCASE_U: equ $B5
VDPTILE_ORANGE_UPPERCASE_V: equ $B6
VDPTILE_ORANGE_UPPERCASE_W: equ $B7
VDPTILE_ORANGE_UPPERCASE_X: equ $B8
VDPTILE_ORANGE_UPPERCASE_Y: equ $B9
VDPTILE_ORANGE_UPPERCASE_Z: equ $BA
VDPTILE_ORANGE_NUMBER_ZERO: equ $BB
VDPTILE_ORANGE_NUMBER_ONE: equ $BC
VDPTILE_ORANGE_NUMBER_TWO: equ $BD
VDPTILE_ORANGE_NUMBER_THREE: equ $BE
VDPTILE_ORANGE_NUMBER_FOUR: equ $BF
VDPTILE_ORANGE_UNDERSCORE: equ $C0
VDPTILE_ORANGE_LOWERCASE_A: equ $C1
VDPTILE_ORANGE_LOWERCASE_B: equ $C2
VDPTILE_ORANGE_LOWERCASE_C: equ $C3
VDPTILE_ORANGE_LOWERCASE_D: equ $C4
VDPTILE_ORANGE_LOWERCASE_E: equ $C5
VDPTILE_ORANGE_LOWERCASE_F: equ $C6
VDPTILE_ORANGE_LOWERCASE_G: equ $C7
VDPTILE_ORANGE_LOWERCASE_H: equ $C8
VDPTILE_ORANGE_LOWERCASE_I: equ $C9
VDPTILE_ORANGE_LOWERCASE_J: equ $CA
VDPTILE_ORANGE_LOWERCASE_K: equ $CB
VDPTILE_ORANGE_LOWERCASE_L: equ $CC
VDPTILE_ORANGE_LOWERCASE_M: equ $CD
VDPTILE_ORANGE_LOWERCASE_N: equ $CE
VDPTILE_ORANGE_LOWERCASE_O: equ $CF
VDPTILE_ORANGE_LOWERCASE_P: equ $D0
VDPTILE_ORANGE_LOWERCASE_Q: equ $D1
VDPTILE_ORANGE_LOWERCASE_R: equ $D2
VDPTILE_ORANGE_LOWERCASE_S: equ $D3
VDPTILE_ORANGE_LOWERCASE_T: equ $D4
VDPTILE_ORANGE_LOWERCASE_U: equ $D5
VDPTILE_ORANGE_LOWERCASE_V: equ $D6
VDPTILE_ORANGE_LOWERCASE_W: equ $D7
VDPTILE_ORANGE_LOWERCASE_X: equ $D8
VDPTILE_ORANGE_LOWERCASE_Y: equ $D9
VDPTILE_ORANGE_LOWERCASE_Z: equ $DA
VDPTILE_ORANGE_NUMBER_FIVE: equ $DB
VDPTILE_ORANGE_NUMBER_SIX: equ $DC
VDPTILE_ORANGE_NUMBER_SEVEN: equ $DD
VDPTILE_ORANGE_NUMBER_EIGHT: equ $DE
VDPTILE_ORANGE_NUMBER_NINE: equ $DF
VDPTILE_STATUS_BAR_E0: equ $E0
VDPTILE_STATUS_BAR_E1: equ $E1
VDPTILE_STATUS_BAR_E2: equ $E2
VDPTILE_STATUS_BAR_E3: equ $E3
VDPTILE_STATUS_BAR_E4: equ $E4
VDPTILE_STATUS_BAR_E5: equ $E5
VDPTILE_STATUS_BAR_E6: equ $E6
VDPTILE_STATUS_BAR_E7: equ $E7
VDPTILE_STATUS_BAR_E8: equ $E8
VDPTILE_STATUS_BAR_E9: equ $E9
VDPTILE_STATUS_BAR_EA: equ $EA
VDPTILE_STATUS_BAR_EB: equ $EB
VDPTILE_STATUS_BAR_EC: equ $EC
VDPTILE_STATUS_BAR_ED: equ $ED
VDPTILE_STATUSEFFECT_POISON_A: equ $EE
VDPTILE_STATUSEFFECT_POISON_B: equ $EF
VDPTILE_SPELL_LEVEL_BAR_F0: equ $F0
VDPTILE_SPELL_LEVEL_BAR_F1: equ $F1
VDPTILE_SPELL_LEVEL_BAR_F2: equ $F2
VDPTILE_SPELL_LEVEL_BAR_F3: equ $F3
VDPTILE_SPELL_LEVEL_BAR_F4: equ $F4
VDPTILE_SPELL_LEVEL_BAR_F5: equ $F5
VDPTILE_SPELL_LEVEL_BAR_F6: equ $F6
VDPTILE_SPELL_LEVEL_BAR_F7: equ $F7
VDPTILE_248: equ $F8
VDPTILE_PORTRAIT_WINDOW_CORNER: equ $F9
VDPTILE_HORIZONTAL_PORTRAIT_WINDOW_BORDER: equ $FA
VDPTILE_VERTICAL_PORTRAIT_WINDOW_BORDER: equ $FB
VDPTILE_STATUSEFFECT_SLEEP_A: equ $FC
VDPTILE_STATUSEFFECT_SLEEP_B: equ $FD
VDPTILE_STATUSEFFECT_CURSE_A: equ $FE
VDPTILE_STATUSEFFECT_CURSE_B: equ $FF
VDPTILE_768: equ $300
VDPTILE_769: equ $301
VDPTILE_770: equ $302
VDPTILE_771: equ $303
VDPTILE_772: equ $304
VDPTILE_773: equ $305
VDPTILE_774: equ $306
VDPTILE_775: equ $307
VDPTILE_776: equ $308
VDPTILE_777: equ $309
VDPTILE_778: equ $30A
VDPTILE_779: equ $30B
VDPTILE_780: equ $30C
VDPTILE_781: equ $30D
VDPTILE_782: equ $30E
VDPTILE_783: equ $30F
VDPTILE_784: equ $310
VDPTILE_785: equ $311
VDPTILE_786: equ $312
VDPTILE_787: equ $313
VDPTILE_788: equ $314
VDPTILE_789: equ $315
VDPTILE_790: equ $316
VDPTILE_791: equ $317
VDPTILE_792: equ $318
VDPTILE_793: equ $319
VDPTILE_794: equ $31A
VDPTILE_795: equ $31B
VDPTILE_796: equ $31C
VDPTILE_797: equ $31D
VDPTILE_798: equ $31E
VDPTILE_799: equ $31F
VDPTILE_800: equ $320
VDPTILE_801: equ $321
VDPTILE_802: equ $322
VDPTILE_803: equ $323
VDPTILE_804: equ $324
VDPTILE_805: equ $325
VDPTILE_806: equ $326
VDPTILE_807: equ $327
VDPTILE_808: equ $328
VDPTILE_809: equ $329
VDPTILE_810: equ $32A
VDPTILE_811: equ $32B
VDPTILE_812: equ $32C
VDPTILE_813: equ $32D
VDPTILE_814: equ $32E
VDPTILE_815: equ $32F
VDPTILE_816: equ $330
VDPTILE_817: equ $331
VDPTILE_818: equ $332
VDPTILE_819: equ $333
VDPTILE_820: equ $334
VDPTILE_821: equ $335
VDPTILE_822: equ $336
VDPTILE_823: equ $337
VDPTILE_824: equ $338
VDPTILE_825: equ $339
VDPTILE_826: equ $33A
VDPTILE_827: equ $33B
VDPTILE_828: equ $33C
VDPTILE_829: equ $33D
VDPTILE_830: equ $33E
VDPTILE_831: equ $33F
VDPTILE_832: equ $340
VDPTILE_833: equ $341
VDPTILE_834: equ $342
VDPTILE_835: equ $343
VDPTILE_836: equ $344
VDPTILE_837: equ $345
VDPTILE_838: equ $346
VDPTILE_839: equ $347
VDPTILE_840: equ $348
VDPTILE_841: equ $349
VDPTILE_842: equ $34A
VDPTILE_843: equ $34B
VDPTILE_844: equ $34C
VDPTILE_845: equ $34D
VDPTILE_846: equ $34E
VDPTILE_847: equ $34F
VDPTILE_848: equ $350
VDPTILE_849: equ $351
VDPTILE_850: equ $352
VDPTILE_851: equ $353
VDPTILE_852: equ $354
VDPTILE_853: equ $355
VDPTILE_854: equ $356
VDPTILE_855: equ $357
VDPTILE_856: equ $358
VDPTILE_857: equ $359
VDPTILE_858: equ $35A
VDPTILE_859: equ $35B
VDPTILE_860: equ $35C
VDPTILE_861: equ $35D
VDPTILE_862: equ $35E
VDPTILE_863: equ $35F
VDPTILE_ALLYSPRITE_1: equ $400
VDPTILE_ALLYSPRITE_2: equ $410
VDPTILE_ALLYSPRITE_3: equ $420
VDPTILE_ALLYSPRITE_4: equ $430
VDPTILE_ALLYSPRITE_5: equ $440
VDPTILE_ALLYSPRITE_6: equ $450
VDPTILE_ALLYSPRITE_7: equ $460
VDPTILE_ALLYSPRITE_8: equ $470
VDPTILE_ALLYSPRITE_9: equ $480
VDPTILE_1168: equ $490
VDPTILE_1184: equ $4A0
VDPTILE_1200: equ $4B0
VDPTILE_1216: equ $4C0
VDPTILE_1232: equ $4D0
VDPTILE_1248: equ $4E0
VDPTILE_1264: equ $4F0
VDPTILE_1280: equ $500
VDPTILE_1296: equ $510
VDPTILE_WEAPONSPRITE_1: equ $520
VDPTILE_WEAPONSPRITE_2: equ $530
VDPTILE_WEAPONSPRITE_3: equ $540
VDPTILE_WEAPONSPRITE_4: equ $550
VDPTILE_GROUNDSPRITE_1: equ $560
VDPTILE_GROUNDSPRITE_2: equ $570
VDPTILE_GROUNDSPRITE_3: equ $580
VDPTILE_MESSAGE_START1: equ $680
VDPTILE_1665: equ $681
VDPTILE_1666: equ $682
VDPTILE_1667: equ $683
VDPTILE_1668: equ $684
VDPTILE_1669: equ $685
VDPTILE_1670: equ $686
VDPTILE_1671: equ $687
VDPTILE_1672: equ $688
VDPTILE_1673: equ $689
VDPTILE_MESSAGE_END1: equ $700
VDPTILE_MESSAGE_START2: equ $7C0
VDPTILE_SELECTION: equ $7DC
VDPTILE_MIRRORED_BIT: equ $800
VDPTILE_FLIPPED_BIT: equ $1000
VDPTILE_PALETTE2: equ $2000
VDPTILE_PALETTE3: equ $4000
VDPTILE_PALETTE4: equ $6000
VDPTILE_PRIORITY_BIT: equ $8000

; ---------------------------------------------------------------------------

; enum VdpTiles_StatusEffects
VDPTILES_STATUSEFFECT_DISPEL: equ $C03CC03E
VDPTILES_STATUSEFFECT_MUDDLE: equ $C05BC05D
VDPTILES_STATUSEFFECT_POISON: equ $C0EEC0EF
VDPTILES_STATUSEFFECT_SLEEP: equ $C0FCC0FD
VDPTILES_STATUSEFFECT_CURSE: equ $C0FEC0FF

; ---------------------------------------------------------------------------

; enum VdpSpriteOffsets
VDPSPRITE_OFFSET_Y: equ 0
VDPSPRITE_OFFSET_SIZE: equ 2
VDPSPRITE_OFFSET_LINK: equ 3
VDPSPRITE_OFFSET_TILE: equ 4
VDPSPRITE_OFFSET_X: equ 6

; ---------------------------------------------------------------------------

; enum VdpSpriteSize (bitfield)
VDPSPRITESIZE_V1: equ 0 ; vertical tile size
VDPSPRITESIZE_V2: equ $100
VDPSPRITESIZE_V3: equ $200
VDPSPRITESIZE_V4: equ $300
VDPSPRITESIZE_H1: equ 0 ; horizontal tile size
VDPSPRITESIZE_H2: equ $400
VDPSPRITESIZE_H3: equ $800
VDPSPRITESIZE_H4: equ $C00

; ---------------------------------------------------------------------------

; enum VIntBitmap
VDP_COMMAND_REQUEST: equ 0
DEACTIVATE_DMA: equ 1
DMA_REQUEST: equ 3
VRAM_READ_REQUEST: equ 4
ENABLE_VINT: equ 7

; ---------------------------------------------------------------------------

; enum Weaponsprites
WEAPONSPRITE_SHORT_SWORD: equ 0
WEAPONSPRITE_MIDDLE_SWORD: equ 1
WEAPONSPRITE_KATANA: equ 2
WEAPONSPRITE_SWORD_OF_LIGHT: equ 3
WEAPONSPRITE_SWORD_OF_DARKNESS: equ 4
WEAPONSPRITE_SPEAR: equ 5
WEAPONSPRITE_LANCE: equ 6
WEAPONSPRITE_HALBERD: equ 7
WEAPONSPRITE_VALKYRIE: equ 8
WEAPONSPRITE_SHORT_AXE: equ 9
WEAPONSPRITE_BATTLE_AXE: equ 10
WEAPONSPRITE_GREAT_AXE: equ 11
WEAPONSPRITE_SIMPLE_STAFF: equ 12
WEAPONSPRITE_POWER_STAFF: equ 13
WEAPONSPRITE_14: equ 14
WEAPONSPRITE_ARROW: equ 15
WEAPONSPRITE_SHELL: equ 16
WEAPONSPRITE_SHOT: equ 17

; ---------------------------------------------------------------------------

; enum WeaponspriteVariations
WEAPON_VARIATION_1: equ 0
WEAPON_VARIATION_2: equ $10
WEAPON_VARIATION_3: equ $20
WEAPON_VARIATION_4: equ $30
WEAPON_VARIATION_MASK: equ $30